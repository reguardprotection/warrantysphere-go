// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/reguardprotection/warrantysphere/internal/utils"
)

type UploadDocumentBodyFile struct {
	FileName string `multipartForm:"name=file"`
	// This field accepts []byte data or io.Reader implementations, such as *os.File.
	Content any `multipartForm:"content"`
}

func (o *UploadDocumentBodyFile) GetFileName() string {
	if o == nil {
		return ""
	}
	return o.FileName
}

func (o *UploadDocumentBodyFile) GetContent() any {
	if o == nil {
		return nil
	}
	return o.Content
}

type UploadDocumentBody struct {
	// Binary data of the file to be uploaded.
	File UploadDocumentBodyFile `multipartForm:"file"`
	// User-defined unique identifier to be associated with the document.
	ReferenceID *string `multipartForm:"name=referenceId"`
	// Title of the document.
	Title string `multipartForm:"name=title"`
	// Description of the document.
	Description *string `multipartForm:"name=description"`
	// File extension to be used when storing the file.
	//
	// If not provided, the file will be stored without any extension.
	Extension *string `multipartForm:"name=extension"`
	// Logical directory to be used when storing the document.
	//
	// Has no impact on security or retrieval of documents.
	Directory *string `multipartForm:"name=directory"`
	// Boolean flag indicating if the file should be publicly accessible/downloadable. Private files can only be accessed/downloaded when their downloadURL includes an authentication token (short-lived).
	PrivateFile *bool `default:"true" multipartForm:"name=privateFile"`
}

func (u UploadDocumentBody) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(u, "", false)
}

func (u *UploadDocumentBody) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &u, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *UploadDocumentBody) GetFile() UploadDocumentBodyFile {
	if o == nil {
		return UploadDocumentBodyFile{}
	}
	return o.File
}

func (o *UploadDocumentBody) GetReferenceID() *string {
	if o == nil {
		return nil
	}
	return o.ReferenceID
}

func (o *UploadDocumentBody) GetTitle() string {
	if o == nil {
		return ""
	}
	return o.Title
}

func (o *UploadDocumentBody) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *UploadDocumentBody) GetExtension() *string {
	if o == nil {
		return nil
	}
	return o.Extension
}

func (o *UploadDocumentBody) GetDirectory() *string {
	if o == nil {
		return nil
	}
	return o.Directory
}

func (o *UploadDocumentBody) GetPrivateFile() *bool {
	if o == nil {
		return nil
	}
	return o.PrivateFile
}
