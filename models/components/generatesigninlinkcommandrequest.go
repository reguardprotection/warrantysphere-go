// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"github.com/reguardprotection/warrantysphere/internal/utils"
)

type IDField string

const (
	IDFieldID          IDField = "id"
	IDFieldReferenceID IDField = "referenceId"
	IDFieldEmail       IDField = "email"
)

func (e IDField) ToPointer() *IDField {
	return &e
}
func (e *IDField) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "id":
		fallthrough
	case "referenceId":
		fallthrough
	case "email":
		*e = IDField(v)
		return nil
	default:
		return fmt.Errorf("invalid value for IDField: %v", v)
	}
}

type GenerateSignInLinkCommandRequest struct {
	IDField *IDField `default:"id" json:"idField"`
	// Where should the link redirect to
	Redirect *string `default:"null" json:"redirect"`
}

func (g GenerateSignInLinkCommandRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GenerateSignInLinkCommandRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *GenerateSignInLinkCommandRequest) GetIDField() *IDField {
	if o == nil {
		return nil
	}
	return o.IDField
}

func (o *GenerateSignInLinkCommandRequest) GetRedirect() *string {
	if o == nil {
		return nil
	}
	return o.Redirect
}
