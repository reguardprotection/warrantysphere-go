// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"github.com/reguardprotection/warrantysphere/internal/utils"
	"time"
)

// ClaimPaymentAggregateStatus - Current status of the payment
type ClaimPaymentAggregateStatus string

const (
	ClaimPaymentAggregateStatusDraft             ClaimPaymentAggregateStatus = "DRAFT"
	ClaimPaymentAggregateStatusVoided            ClaimPaymentAggregateStatus = "VOIDED"
	ClaimPaymentAggregateStatusPending           ClaimPaymentAggregateStatus = "PENDING"
	ClaimPaymentAggregateStatusPaid              ClaimPaymentAggregateStatus = "PAID"
	ClaimPaymentAggregateStatusFailed            ClaimPaymentAggregateStatus = "FAILED"
	ClaimPaymentAggregateStatusProcessing        ClaimPaymentAggregateStatus = "PROCESSING"
	ClaimPaymentAggregateStatusRefunded          ClaimPaymentAggregateStatus = "REFUNDED"
	ClaimPaymentAggregateStatusPartiallyRefunded ClaimPaymentAggregateStatus = "PARTIALLY_REFUNDED"
	ClaimPaymentAggregateStatusProcessingRefund  ClaimPaymentAggregateStatus = "PROCESSING_REFUND"
)

func (e ClaimPaymentAggregateStatus) ToPointer() *ClaimPaymentAggregateStatus {
	return &e
}
func (e *ClaimPaymentAggregateStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DRAFT":
		fallthrough
	case "VOIDED":
		fallthrough
	case "PENDING":
		fallthrough
	case "PAID":
		fallthrough
	case "FAILED":
		fallthrough
	case "PROCESSING":
		fallthrough
	case "REFUNDED":
		fallthrough
	case "PARTIALLY_REFUNDED":
		fallthrough
	case "PROCESSING_REFUND":
		*e = ClaimPaymentAggregateStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ClaimPaymentAggregateStatus: %v", v)
	}
}

// Claim linked to this claim item.
type Claim struct {
}

type ClaimPaymentAggregateAddress struct {
}

// ClaimPaymentAggregateCreatedBy - The user who created the payment.
type ClaimPaymentAggregateCreatedBy struct {
	// Unique identifier for the user.
	ID string `json:"id"`
	// Datetime when the object was created.
	Created time.Time `json:"created"`
	// Datetime when the object was last modified.
	Modified      time.Time                     `json:"modified"`
	Email         string                        `json:"email"`
	EmailVerified *bool                         `default:"false" json:"emailVerified"`
	PhoneNumber   *string                       `default:"null" json:"phoneNumber"`
	DisplayName   string                        `json:"displayName"`
	FriendlyName  *string                       `default:"null" json:"friendlyName"`
	PhotoURL      *string                       `default:"null" json:"photoURL"`
	Address       *ClaimPaymentAggregateAddress `json:"address"`
	Birthday      *time.Time                    `default:"null" json:"birthday"`
	LastSignedIn  *time.Time                    `default:"null" json:"lastSignedIn"`
}

func (c ClaimPaymentAggregateCreatedBy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *ClaimPaymentAggregateCreatedBy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ClaimPaymentAggregateCreatedBy) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ClaimPaymentAggregateCreatedBy) GetCreated() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.Created
}

func (o *ClaimPaymentAggregateCreatedBy) GetModified() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.Modified
}

func (o *ClaimPaymentAggregateCreatedBy) GetEmail() string {
	if o == nil {
		return ""
	}
	return o.Email
}

func (o *ClaimPaymentAggregateCreatedBy) GetEmailVerified() *bool {
	if o == nil {
		return nil
	}
	return o.EmailVerified
}

func (o *ClaimPaymentAggregateCreatedBy) GetPhoneNumber() *string {
	if o == nil {
		return nil
	}
	return o.PhoneNumber
}

func (o *ClaimPaymentAggregateCreatedBy) GetDisplayName() string {
	if o == nil {
		return ""
	}
	return o.DisplayName
}

func (o *ClaimPaymentAggregateCreatedBy) GetFriendlyName() *string {
	if o == nil {
		return nil
	}
	return o.FriendlyName
}

func (o *ClaimPaymentAggregateCreatedBy) GetPhotoURL() *string {
	if o == nil {
		return nil
	}
	return o.PhotoURL
}

func (o *ClaimPaymentAggregateCreatedBy) GetAddress() *ClaimPaymentAggregateAddress {
	if o == nil {
		return nil
	}
	return o.Address
}

func (o *ClaimPaymentAggregateCreatedBy) GetBirthday() *time.Time {
	if o == nil {
		return nil
	}
	return o.Birthday
}

func (o *ClaimPaymentAggregateCreatedBy) GetLastSignedIn() *time.Time {
	if o == nil {
		return nil
	}
	return o.LastSignedIn
}

type ClaimPaymentAggregateDeletedByAddress struct {
}

// DeletedBy - Model of the user who deleted the Payment
type DeletedBy struct {
	// Unique identifier for the user.
	ID string `json:"id"`
	// Datetime when the object was created.
	Created time.Time `json:"created"`
	// Datetime when the object was last modified.
	Modified      time.Time                              `json:"modified"`
	Email         string                                 `json:"email"`
	EmailVerified *bool                                  `default:"false" json:"emailVerified"`
	PhoneNumber   *string                                `default:"null" json:"phoneNumber"`
	DisplayName   string                                 `json:"displayName"`
	FriendlyName  *string                                `default:"null" json:"friendlyName"`
	PhotoURL      *string                                `default:"null" json:"photoURL"`
	Address       *ClaimPaymentAggregateDeletedByAddress `json:"address"`
	Birthday      *time.Time                             `default:"null" json:"birthday"`
	LastSignedIn  *time.Time                             `default:"null" json:"lastSignedIn"`
}

func (d DeletedBy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(d, "", false)
}

func (d *DeletedBy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &d, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *DeletedBy) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *DeletedBy) GetCreated() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.Created
}

func (o *DeletedBy) GetModified() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.Modified
}

func (o *DeletedBy) GetEmail() string {
	if o == nil {
		return ""
	}
	return o.Email
}

func (o *DeletedBy) GetEmailVerified() *bool {
	if o == nil {
		return nil
	}
	return o.EmailVerified
}

func (o *DeletedBy) GetPhoneNumber() *string {
	if o == nil {
		return nil
	}
	return o.PhoneNumber
}

func (o *DeletedBy) GetDisplayName() string {
	if o == nil {
		return ""
	}
	return o.DisplayName
}

func (o *DeletedBy) GetFriendlyName() *string {
	if o == nil {
		return nil
	}
	return o.FriendlyName
}

func (o *DeletedBy) GetPhotoURL() *string {
	if o == nil {
		return nil
	}
	return o.PhotoURL
}

func (o *DeletedBy) GetAddress() *ClaimPaymentAggregateDeletedByAddress {
	if o == nil {
		return nil
	}
	return o.Address
}

func (o *DeletedBy) GetBirthday() *time.Time {
	if o == nil {
		return nil
	}
	return o.Birthday
}

func (o *DeletedBy) GetLastSignedIn() *time.Time {
	if o == nil {
		return nil
	}
	return o.LastSignedIn
}

type ClaimPaymentAggregate struct {
	// Unique ID of the payment
	ID string `json:"id"`
	// Datetime when the object was created.
	Created time.Time `json:"created"`
	// Datetime when the object was last modified.
	Modified time.Time `json:"modified"`
	// Short title of the payment
	Title string `json:"title"`
	// Long description of the payment
	Description *string `json:"description"`
	ReferenceID *string `json:"referenceId"`
	// Current status of the payment
	Status ClaimPaymentAggregateStatus `json:"status"`
	// Unique ID of the payment in its payment method's associated gateway
	Destination *string `json:"destination"`
	// The monetary amount of the deductible to be paid for any claim.
	//                   A positive integer representing how much to charge in the smallest currency unit (e.g. 100 cents to charge $1.00).
	//                   If not 0, the minimum amount is 50 ($0.50).
	Amount int64 `json:"amount"`
	// Unique ID of the claim linked to this claim payment.
	ClaimID string `json:"claimId"`
	// Claim linked to this claim item.
	Claim Claim `json:"claim"`
	// Unique ID of the payment's Customer
	CustomerID string `json:"customerId"`
	// Customer details of the payment
	Customer *UserAggregate `json:"customer,omitempty"`
	// Payment deletion date
	Deleted *time.Time `json:"deleted,omitempty"`
	// The unique identifier of the user who created the payment.
	CreatedByID *string `json:"createdById"`
	// The user who created the payment.
	CreatedBy *ClaimPaymentAggregateCreatedBy `json:"createdBy,omitempty"`
	// Uniqe ID  of the user who deleted the Payment
	DeletedByID string `json:"deletedById"`
	// Model of the user who deleted the Payment
	DeletedBy *DeletedBy `json:"deletedBy,omitempty"`
	// Visibility of payment to user
	VisibleToCustomer *bool `json:"visibleToCustomer"`
}

func (c ClaimPaymentAggregate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *ClaimPaymentAggregate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ClaimPaymentAggregate) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ClaimPaymentAggregate) GetCreated() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.Created
}

func (o *ClaimPaymentAggregate) GetModified() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.Modified
}

func (o *ClaimPaymentAggregate) GetTitle() string {
	if o == nil {
		return ""
	}
	return o.Title
}

func (o *ClaimPaymentAggregate) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *ClaimPaymentAggregate) GetReferenceID() *string {
	if o == nil {
		return nil
	}
	return o.ReferenceID
}

func (o *ClaimPaymentAggregate) GetStatus() ClaimPaymentAggregateStatus {
	if o == nil {
		return ClaimPaymentAggregateStatus("")
	}
	return o.Status
}

func (o *ClaimPaymentAggregate) GetDestination() *string {
	if o == nil {
		return nil
	}
	return o.Destination
}

func (o *ClaimPaymentAggregate) GetAmount() int64 {
	if o == nil {
		return 0
	}
	return o.Amount
}

func (o *ClaimPaymentAggregate) GetClaimID() string {
	if o == nil {
		return ""
	}
	return o.ClaimID
}

func (o *ClaimPaymentAggregate) GetClaim() Claim {
	if o == nil {
		return Claim{}
	}
	return o.Claim
}

func (o *ClaimPaymentAggregate) GetCustomerID() string {
	if o == nil {
		return ""
	}
	return o.CustomerID
}

func (o *ClaimPaymentAggregate) GetCustomer() *UserAggregate {
	if o == nil {
		return nil
	}
	return o.Customer
}

func (o *ClaimPaymentAggregate) GetDeleted() *time.Time {
	if o == nil {
		return nil
	}
	return o.Deleted
}

func (o *ClaimPaymentAggregate) GetCreatedByID() *string {
	if o == nil {
		return nil
	}
	return o.CreatedByID
}

func (o *ClaimPaymentAggregate) GetCreatedBy() *ClaimPaymentAggregateCreatedBy {
	if o == nil {
		return nil
	}
	return o.CreatedBy
}

func (o *ClaimPaymentAggregate) GetDeletedByID() string {
	if o == nil {
		return ""
	}
	return o.DeletedByID
}

func (o *ClaimPaymentAggregate) GetDeletedBy() *DeletedBy {
	if o == nil {
		return nil
	}
	return o.DeletedBy
}

func (o *ClaimPaymentAggregate) GetVisibleToCustomer() *bool {
	if o == nil {
		return nil
	}
	return o.VisibleToCustomer
}
