// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/reguardprotection/warrantysphere/internal/utils"
	"time"
)

type RoleAssignmentAggregate struct {
	ID            string         `json:"id"`
	RoleID        string         `json:"roleId"`
	StaffID       string         `json:"staffId"`
	Staff         StaffAggregate `json:"staff"`
	PermissionKey string         `json:"permissionKey"`
	Created       time.Time      `json:"created"`
}

func (r RoleAssignmentAggregate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *RoleAssignmentAggregate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *RoleAssignmentAggregate) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *RoleAssignmentAggregate) GetRoleID() string {
	if o == nil {
		return ""
	}
	return o.RoleID
}

func (o *RoleAssignmentAggregate) GetStaffID() string {
	if o == nil {
		return ""
	}
	return o.StaffID
}

func (o *RoleAssignmentAggregate) GetStaff() StaffAggregate {
	if o == nil {
		return StaffAggregate{}
	}
	return o.Staff
}

func (o *RoleAssignmentAggregate) GetPermissionKey() string {
	if o == nil {
		return ""
	}
	return o.PermissionKey
}

func (o *RoleAssignmentAggregate) GetCreated() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.Created
}
