// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// AccountBusinessOwnerDtoType - Type of account owner
type AccountBusinessOwnerDtoType string

const (
	AccountBusinessOwnerDtoTypeBusiness AccountBusinessOwnerDtoType = "BUSINESS"
)

func (e AccountBusinessOwnerDtoType) ToPointer() *AccountBusinessOwnerDtoType {
	return &e
}
func (e *AccountBusinessOwnerDtoType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "BUSINESS":
		*e = AccountBusinessOwnerDtoType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AccountBusinessOwnerDtoType: %v", v)
	}
}

type AccountBusinessOwnerDto struct {
	// Type of account owner
	Type AccountBusinessOwnerDtoType `json:"type"`
	// Name of the account owner
	Name string `json:"name"`
	// Email address of the account owner
	Email string `json:"email"`
	// Phone number of the account owner
	Phone *string `json:"phone"`
	// Type of business
	BusinessType *string `json:"businessType"`
	// Address of the company's place of business
	Address AddressDto `json:"address"`
}

func (o *AccountBusinessOwnerDto) GetType() AccountBusinessOwnerDtoType {
	if o == nil {
		return AccountBusinessOwnerDtoType("")
	}
	return o.Type
}

func (o *AccountBusinessOwnerDto) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *AccountBusinessOwnerDto) GetEmail() string {
	if o == nil {
		return ""
	}
	return o.Email
}

func (o *AccountBusinessOwnerDto) GetPhone() *string {
	if o == nil {
		return nil
	}
	return o.Phone
}

func (o *AccountBusinessOwnerDto) GetBusinessType() *string {
	if o == nil {
		return nil
	}
	return o.BusinessType
}

func (o *AccountBusinessOwnerDto) GetAddress() AddressDto {
	if o == nil {
		return AddressDto{}
	}
	return o.Address
}
