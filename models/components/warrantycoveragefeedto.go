// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/reguardprotection/warrantysphere/internal/utils"
)

// WarrantyCoverageFeeDtoFeeType - Type of fee for the warranty coverage fee.
type WarrantyCoverageFeeDtoFeeType struct {
}

type WarrantyCoverageFeeDto struct {
	// Unique identifier of the plan coverage fee
	PlanCoverageFeeID string `json:"planCoverageFeeId"`
	// Unique identifier of the warranty coverage fee's coverage
	CoverageID string `json:"coverageId"`
	// Title of the warranty coverage fee
	Title string `json:"title"`
	// Type of fee for the warranty coverage fee.
	FeeType WarrantyCoverageFeeDtoFeeType `json:"feeType"`
	// Value used of the warranty coverage fee.
	Value *float64 `default:"0" json:"value"`
}

func (w WarrantyCoverageFeeDto) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(w, "", false)
}

func (w *WarrantyCoverageFeeDto) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &w, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *WarrantyCoverageFeeDto) GetPlanCoverageFeeID() string {
	if o == nil {
		return ""
	}
	return o.PlanCoverageFeeID
}

func (o *WarrantyCoverageFeeDto) GetCoverageID() string {
	if o == nil {
		return ""
	}
	return o.CoverageID
}

func (o *WarrantyCoverageFeeDto) GetTitle() string {
	if o == nil {
		return ""
	}
	return o.Title
}

func (o *WarrantyCoverageFeeDto) GetFeeType() WarrantyCoverageFeeDtoFeeType {
	if o == nil {
		return WarrantyCoverageFeeDtoFeeType{}
	}
	return o.FeeType
}

func (o *WarrantyCoverageFeeDto) GetValue() *float64 {
	if o == nil {
		return nil
	}
	return o.Value
}
