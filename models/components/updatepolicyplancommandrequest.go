// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type UpdatePolicyPlanCommandRequest struct {
	// Whether or not the command should create a new draft policy if required.
	CanCreateNewVersion bool                `json:"canCreateNewVersion"`
	Order               *float64            `json:"order,omitempty"`
	Title               *string             `json:"title,omitempty"`
	Description         *string             `json:"description,omitempty"`
	Visible             *bool               `json:"visible,omitempty"`
	Conditions          *ConditionGroupDto  `json:"conditions,omitempty"`
	Coverages           [][]string          `json:"coverages,omitempty"`
	LiabilityLimitGroup []LiabilityGroupDto `json:"liabilityLimitGroup,omitempty"`
}

func (o *UpdatePolicyPlanCommandRequest) GetCanCreateNewVersion() bool {
	if o == nil {
		return false
	}
	return o.CanCreateNewVersion
}

func (o *UpdatePolicyPlanCommandRequest) GetOrder() *float64 {
	if o == nil {
		return nil
	}
	return o.Order
}

func (o *UpdatePolicyPlanCommandRequest) GetTitle() *string {
	if o == nil {
		return nil
	}
	return o.Title
}

func (o *UpdatePolicyPlanCommandRequest) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *UpdatePolicyPlanCommandRequest) GetVisible() *bool {
	if o == nil {
		return nil
	}
	return o.Visible
}

func (o *UpdatePolicyPlanCommandRequest) GetConditions() *ConditionGroupDto {
	if o == nil {
		return nil
	}
	return o.Conditions
}

func (o *UpdatePolicyPlanCommandRequest) GetCoverages() [][]string {
	if o == nil {
		return nil
	}
	return o.Coverages
}

func (o *UpdatePolicyPlanCommandRequest) GetLiabilityLimitGroup() []LiabilityGroupDto {
	if o == nil {
		return nil
	}
	return o.LiabilityLimitGroup
}
