// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"github.com/reguardprotection/warrantysphere/internal/utils"
)

// CreateNumberPropertyRequestFormat - The format of the property (if for currency, value is in cents)
type CreateNumberPropertyRequestFormat string

const (
	CreateNumberPropertyRequestFormatNumber   CreateNumberPropertyRequestFormat = "number"
	CreateNumberPropertyRequestFormatCurrency CreateNumberPropertyRequestFormat = "currency"
)

func (e CreateNumberPropertyRequestFormat) ToPointer() *CreateNumberPropertyRequestFormat {
	return &e
}
func (e *CreateNumberPropertyRequestFormat) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "number":
		fallthrough
	case "currency":
		*e = CreateNumberPropertyRequestFormat(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateNumberPropertyRequestFormat: %v", v)
	}
}

// CreateNumberPropertyRequestConfig - The extra configuration of this property
type CreateNumberPropertyRequestConfig struct {
	// The format of the property (if for currency, value is in cents)
	Format *CreateNumberPropertyRequestFormat `json:"format"`
	// The minimum allowed (if for currency, value is in cents)
	Min *float64 `json:"min,omitempty"`
	// The maximum allowed (if for currency, value is in cents)
	Max *float64 `json:"max,omitempty"`
}

func (o *CreateNumberPropertyRequestConfig) GetFormat() *CreateNumberPropertyRequestFormat {
	if o == nil {
		return nil
	}
	return o.Format
}

func (o *CreateNumberPropertyRequestConfig) GetMin() *float64 {
	if o == nil {
		return nil
	}
	return o.Min
}

func (o *CreateNumberPropertyRequestConfig) GetMax() *float64 {
	if o == nil {
		return nil
	}
	return o.Max
}

type CreateNumberPropertyRequest struct {
	// The visible name of the property
	Name string `json:"name"`
	// The key of this property. Only lowercase and no special characters or spaces
	ValueKey string `json:"valueKey"`
	// The formId
	FormID *string `default:"null" json:"formId"`
	// The extra configuration of this property
	Config CreateNumberPropertyRequestConfig `json:"config"`
}

func (c CreateNumberPropertyRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CreateNumberPropertyRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CreateNumberPropertyRequest) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *CreateNumberPropertyRequest) GetValueKey() string {
	if o == nil {
		return ""
	}
	return o.ValueKey
}

func (o *CreateNumberPropertyRequest) GetFormID() *string {
	if o == nil {
		return nil
	}
	return o.FormID
}

func (o *CreateNumberPropertyRequest) GetConfig() CreateNumberPropertyRequestConfig {
	if o == nil {
		return CreateNumberPropertyRequestConfig{}
	}
	return o.Config
}
