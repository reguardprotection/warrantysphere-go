// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/reguardprotection/warrantysphere/internal/utils"
	"time"
)

// Distributor linked to this onboarding link that child distributors will be created under.
type Distributor struct {
}

type DistributorOnboardingLinkAggregate struct {
	// Unique identifier of the link.
	ID string `json:"id"`
	// Datetime when the link was created.
	Created time.Time `json:"created"`
	// Datetime of when the link expires.
	Expiry *time.Time `json:"expiry"`
	// Roles that users created with the link will have.
	Roles []string `json:"roles"`
	// Whether or not this link can be used to create users.
	CanCreateUser bool `json:"canCreateUser"`
	// Unique identifier of the parent distributor that child distributors will be created under.
	DistributorID *string `json:"distributorId"`
	// Distributor linked to this onboarding link that child distributors will be created under.
	Distributor *Distributor `json:"distributor,omitempty"`
}

func (d DistributorOnboardingLinkAggregate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(d, "", false)
}

func (d *DistributorOnboardingLinkAggregate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &d, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *DistributorOnboardingLinkAggregate) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *DistributorOnboardingLinkAggregate) GetCreated() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.Created
}

func (o *DistributorOnboardingLinkAggregate) GetExpiry() *time.Time {
	if o == nil {
		return nil
	}
	return o.Expiry
}

func (o *DistributorOnboardingLinkAggregate) GetRoles() []string {
	if o == nil {
		return []string{}
	}
	return o.Roles
}

func (o *DistributorOnboardingLinkAggregate) GetCanCreateUser() bool {
	if o == nil {
		return false
	}
	return o.CanCreateUser
}

func (o *DistributorOnboardingLinkAggregate) GetDistributorID() *string {
	if o == nil {
		return nil
	}
	return o.DistributorID
}

func (o *DistributorOnboardingLinkAggregate) GetDistributor() *Distributor {
	if o == nil {
		return nil
	}
	return o.Distributor
}
