// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/reguardprotection/warrantysphere/internal/utils"
	"time"
)

type CoverageAggregate struct {
	// Unique identifier of the coverage.
	ID string `json:"id"`
	// Sort order of coverages (lower numbers appear first)
	Order *float64 `default:"0" json:"order"`
	// General term to specify what the coverage is about
	Title string `json:"title"`
	// Description to specify what the coverage is about
	Description string `json:"description"`
	// General term to specify under which group the coverage falls
	Group string `json:"group"`
	// User-defined reference ID.
	ReferenceID *string `json:"referenceId"`
	// Datetime when the coverage was created.
	Created time.Time `json:"created"`
	// Datetime when the coverage was last modified.
	Modified time.Time `json:"modified"`
	// Datetime when the coverage was deleted.
	Deleted time.Time `json:"deleted"`
	// Detailed explanation of coverage inclusions.
	Inclusions string `json:"inclusions"`
	// Detailed explanation of coverage exclusions.
	Exclusions string `json:"exclusions"`
	// The unique identifier of the policy.
	PolicyID string `json:"policyId"`
	// The policy linked to the coverage
	Policy *PolicyAggregate `json:"policy,omitempty"`
}

func (c CoverageAggregate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CoverageAggregate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CoverageAggregate) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *CoverageAggregate) GetOrder() *float64 {
	if o == nil {
		return nil
	}
	return o.Order
}

func (o *CoverageAggregate) GetTitle() string {
	if o == nil {
		return ""
	}
	return o.Title
}

func (o *CoverageAggregate) GetDescription() string {
	if o == nil {
		return ""
	}
	return o.Description
}

func (o *CoverageAggregate) GetGroup() string {
	if o == nil {
		return ""
	}
	return o.Group
}

func (o *CoverageAggregate) GetReferenceID() *string {
	if o == nil {
		return nil
	}
	return o.ReferenceID
}

func (o *CoverageAggregate) GetCreated() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.Created
}

func (o *CoverageAggregate) GetModified() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.Modified
}

func (o *CoverageAggregate) GetDeleted() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.Deleted
}

func (o *CoverageAggregate) GetInclusions() string {
	if o == nil {
		return ""
	}
	return o.Inclusions
}

func (o *CoverageAggregate) GetExclusions() string {
	if o == nil {
		return ""
	}
	return o.Exclusions
}

func (o *CoverageAggregate) GetPolicyID() string {
	if o == nil {
		return ""
	}
	return o.PolicyID
}

func (o *CoverageAggregate) GetPolicy() *PolicyAggregate {
	if o == nil {
		return nil
	}
	return o.Policy
}
