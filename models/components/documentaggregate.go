// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"github.com/reguardprotection/warrantysphere/internal/utils"
	"time"
)

type DocumentAggregateAddress struct {
}

// DocumentAggregateCreatedBy - The user who created the document.
type DocumentAggregateCreatedBy struct {
	// Unique identifier for the user.
	ID string `json:"id"`
	// Datetime when the object was created.
	Created time.Time `json:"created"`
	// Datetime when the object was last modified.
	Modified      time.Time                 `json:"modified"`
	Email         string                    `json:"email"`
	EmailVerified *bool                     `default:"false" json:"emailVerified"`
	PhoneNumber   *string                   `default:"null" json:"phoneNumber"`
	DisplayName   string                    `json:"displayName"`
	FriendlyName  *string                   `default:"null" json:"friendlyName"`
	PhotoURL      *string                   `default:"null" json:"photoURL"`
	Address       *DocumentAggregateAddress `json:"address"`
	Birthday      *time.Time                `default:"null" json:"birthday"`
	LastSignedIn  *time.Time                `default:"null" json:"lastSignedIn"`
}

func (d DocumentAggregateCreatedBy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(d, "", false)
}

func (d *DocumentAggregateCreatedBy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &d, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *DocumentAggregateCreatedBy) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *DocumentAggregateCreatedBy) GetCreated() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.Created
}

func (o *DocumentAggregateCreatedBy) GetModified() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.Modified
}

func (o *DocumentAggregateCreatedBy) GetEmail() string {
	if o == nil {
		return ""
	}
	return o.Email
}

func (o *DocumentAggregateCreatedBy) GetEmailVerified() *bool {
	if o == nil {
		return nil
	}
	return o.EmailVerified
}

func (o *DocumentAggregateCreatedBy) GetPhoneNumber() *string {
	if o == nil {
		return nil
	}
	return o.PhoneNumber
}

func (o *DocumentAggregateCreatedBy) GetDisplayName() string {
	if o == nil {
		return ""
	}
	return o.DisplayName
}

func (o *DocumentAggregateCreatedBy) GetFriendlyName() *string {
	if o == nil {
		return nil
	}
	return o.FriendlyName
}

func (o *DocumentAggregateCreatedBy) GetPhotoURL() *string {
	if o == nil {
		return nil
	}
	return o.PhotoURL
}

func (o *DocumentAggregateCreatedBy) GetAddress() *DocumentAggregateAddress {
	if o == nil {
		return nil
	}
	return o.Address
}

func (o *DocumentAggregateCreatedBy) GetBirthday() *time.Time {
	if o == nil {
		return nil
	}
	return o.Birthday
}

func (o *DocumentAggregateCreatedBy) GetLastSignedIn() *time.Time {
	if o == nil {
		return nil
	}
	return o.LastSignedIn
}

type DocumentAggregateModifiedByAddress struct {
}

// ModifiedBy - The user who modified the Document
type ModifiedBy struct {
	// Unique identifier for the user.
	ID string `json:"id"`
	// Datetime when the object was created.
	Created time.Time `json:"created"`
	// Datetime when the object was last modified.
	Modified      time.Time                           `json:"modified"`
	Email         string                              `json:"email"`
	EmailVerified *bool                               `default:"false" json:"emailVerified"`
	PhoneNumber   *string                             `default:"null" json:"phoneNumber"`
	DisplayName   string                              `json:"displayName"`
	FriendlyName  *string                             `default:"null" json:"friendlyName"`
	PhotoURL      *string                             `default:"null" json:"photoURL"`
	Address       *DocumentAggregateModifiedByAddress `json:"address"`
	Birthday      *time.Time                          `default:"null" json:"birthday"`
	LastSignedIn  *time.Time                          `default:"null" json:"lastSignedIn"`
}

func (m ModifiedBy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *ModifiedBy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ModifiedBy) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ModifiedBy) GetCreated() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.Created
}

func (o *ModifiedBy) GetModified() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.Modified
}

func (o *ModifiedBy) GetEmail() string {
	if o == nil {
		return ""
	}
	return o.Email
}

func (o *ModifiedBy) GetEmailVerified() *bool {
	if o == nil {
		return nil
	}
	return o.EmailVerified
}

func (o *ModifiedBy) GetPhoneNumber() *string {
	if o == nil {
		return nil
	}
	return o.PhoneNumber
}

func (o *ModifiedBy) GetDisplayName() string {
	if o == nil {
		return ""
	}
	return o.DisplayName
}

func (o *ModifiedBy) GetFriendlyName() *string {
	if o == nil {
		return nil
	}
	return o.FriendlyName
}

func (o *ModifiedBy) GetPhotoURL() *string {
	if o == nil {
		return nil
	}
	return o.PhotoURL
}

func (o *ModifiedBy) GetAddress() *DocumentAggregateModifiedByAddress {
	if o == nil {
		return nil
	}
	return o.Address
}

func (o *ModifiedBy) GetBirthday() *time.Time {
	if o == nil {
		return nil
	}
	return o.Birthday
}

func (o *ModifiedBy) GetLastSignedIn() *time.Time {
	if o == nil {
		return nil
	}
	return o.LastSignedIn
}

type DocumentAggregateDeletedByAddress struct {
}

// DocumentAggregateDeletedBy - The user who deleted the document.
type DocumentAggregateDeletedBy struct {
	// Unique identifier for the user.
	ID string `json:"id"`
	// Datetime when the object was created.
	Created time.Time `json:"created"`
	// Datetime when the object was last modified.
	Modified      time.Time                          `json:"modified"`
	Email         string                             `json:"email"`
	EmailVerified *bool                              `default:"false" json:"emailVerified"`
	PhoneNumber   *string                            `default:"null" json:"phoneNumber"`
	DisplayName   string                             `json:"displayName"`
	FriendlyName  *string                            `default:"null" json:"friendlyName"`
	PhotoURL      *string                            `default:"null" json:"photoURL"`
	Address       *DocumentAggregateDeletedByAddress `json:"address"`
	Birthday      *time.Time                         `default:"null" json:"birthday"`
	LastSignedIn  *time.Time                         `default:"null" json:"lastSignedIn"`
}

func (d DocumentAggregateDeletedBy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(d, "", false)
}

func (d *DocumentAggregateDeletedBy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &d, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *DocumentAggregateDeletedBy) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *DocumentAggregateDeletedBy) GetCreated() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.Created
}

func (o *DocumentAggregateDeletedBy) GetModified() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.Modified
}

func (o *DocumentAggregateDeletedBy) GetEmail() string {
	if o == nil {
		return ""
	}
	return o.Email
}

func (o *DocumentAggregateDeletedBy) GetEmailVerified() *bool {
	if o == nil {
		return nil
	}
	return o.EmailVerified
}

func (o *DocumentAggregateDeletedBy) GetPhoneNumber() *string {
	if o == nil {
		return nil
	}
	return o.PhoneNumber
}

func (o *DocumentAggregateDeletedBy) GetDisplayName() string {
	if o == nil {
		return ""
	}
	return o.DisplayName
}

func (o *DocumentAggregateDeletedBy) GetFriendlyName() *string {
	if o == nil {
		return nil
	}
	return o.FriendlyName
}

func (o *DocumentAggregateDeletedBy) GetPhotoURL() *string {
	if o == nil {
		return nil
	}
	return o.PhotoURL
}

func (o *DocumentAggregateDeletedBy) GetAddress() *DocumentAggregateDeletedByAddress {
	if o == nil {
		return nil
	}
	return o.Address
}

func (o *DocumentAggregateDeletedBy) GetBirthday() *time.Time {
	if o == nil {
		return nil
	}
	return o.Birthday
}

func (o *DocumentAggregateDeletedBy) GetLastSignedIn() *time.Time {
	if o == nil {
		return nil
	}
	return o.LastSignedIn
}

type DocumentAggregateFeed string

const (
	DocumentAggregateFeedStaff    DocumentAggregateFeed = "staff"
	DocumentAggregateFeedCustomer DocumentAggregateFeed = "customer"
)

func (e DocumentAggregateFeed) ToPointer() *DocumentAggregateFeed {
	return &e
}
func (e *DocumentAggregateFeed) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "staff":
		fallthrough
	case "customer":
		*e = DocumentAggregateFeed(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DocumentAggregateFeed: %v", v)
	}
}

type DocumentAggregate struct {
	// Unique ID of the document
	ID string `json:"id"`
	// Title of the document.
	Title string `json:"title"`
	// Description of the document.
	Description string `json:"description"`
	// Metadata of the document.
	Metadata DocumentMetadata `json:"metadata"`
	// Download url of the document.
	DownloadURL string `json:"downloadUrl"`
	// Unique identifier of the user who created the document.
	CreatedByID *string `json:"createdById,omitempty"`
	// The user who created the document.
	CreatedBy *DocumentAggregateCreatedBy `json:"createdBy,omitempty"`
	// Datetime when the object was created.
	Created time.Time `json:"created"`
	// Datetime when the object was last modified.
	Modified time.Time `json:"modified"`
	// Unique identifier of the user who modified the document.
	ModifiedByID *string `json:"modifiedById,omitempty"`
	// The user who modified the Document
	ModifiedBy *ModifiedBy `json:"modifiedBy,omitempty"`
	// Datetime when the object was deleted.
	Deleted *time.Time `json:"deleted"`
	// The user who deleted the document.
	DeletedBy *DocumentAggregateDeletedBy `json:"deletedBy,omitempty"`
	// Unique identifier of the user who deleted the document.
	DeletedByID *string `json:"deletedById,omitempty"`
	// Type of the object associated with the document.
	ObjectType *string `json:"objectType,omitempty"`
	// Unique identifier of the object associated with the document.
	ObjectID *string `json:"objectId,omitempty"`
	// The feeds of users who can view the document
	Feed []DocumentAggregateFeed `json:"feed"`
}

func (d DocumentAggregate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(d, "", false)
}

func (d *DocumentAggregate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &d, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *DocumentAggregate) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *DocumentAggregate) GetTitle() string {
	if o == nil {
		return ""
	}
	return o.Title
}

func (o *DocumentAggregate) GetDescription() string {
	if o == nil {
		return ""
	}
	return o.Description
}

func (o *DocumentAggregate) GetMetadata() DocumentMetadata {
	if o == nil {
		return DocumentMetadata{}
	}
	return o.Metadata
}

func (o *DocumentAggregate) GetDownloadURL() string {
	if o == nil {
		return ""
	}
	return o.DownloadURL
}

func (o *DocumentAggregate) GetCreatedByID() *string {
	if o == nil {
		return nil
	}
	return o.CreatedByID
}

func (o *DocumentAggregate) GetCreatedBy() *DocumentAggregateCreatedBy {
	if o == nil {
		return nil
	}
	return o.CreatedBy
}

func (o *DocumentAggregate) GetCreated() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.Created
}

func (o *DocumentAggregate) GetModified() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.Modified
}

func (o *DocumentAggregate) GetModifiedByID() *string {
	if o == nil {
		return nil
	}
	return o.ModifiedByID
}

func (o *DocumentAggregate) GetModifiedBy() *ModifiedBy {
	if o == nil {
		return nil
	}
	return o.ModifiedBy
}

func (o *DocumentAggregate) GetDeleted() *time.Time {
	if o == nil {
		return nil
	}
	return o.Deleted
}

func (o *DocumentAggregate) GetDeletedBy() *DocumentAggregateDeletedBy {
	if o == nil {
		return nil
	}
	return o.DeletedBy
}

func (o *DocumentAggregate) GetDeletedByID() *string {
	if o == nil {
		return nil
	}
	return o.DeletedByID
}

func (o *DocumentAggregate) GetObjectType() *string {
	if o == nil {
		return nil
	}
	return o.ObjectType
}

func (o *DocumentAggregate) GetObjectID() *string {
	if o == nil {
		return nil
	}
	return o.ObjectID
}

func (o *DocumentAggregate) GetFeed() []DocumentAggregateFeed {
	if o == nil {
		return []DocumentAggregateFeed{}
	}
	return o.Feed
}
