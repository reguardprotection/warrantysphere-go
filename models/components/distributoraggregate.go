// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/reguardprotection/warrantysphere/internal/utils"
	"time"
)

// Status - Activation status of the distributor.
type Status struct {
}

type DistributorAggregate struct {
	// Unique identifier of the distributor
	ID string `json:"id"`
	// User-defined reference ID.
	ReferenceID *string `json:"referenceId"`
	// Datetime when the distributor was created.
	Created time.Time `json:"created"`
	// Datetime when the distributor was last modified.
	Modified time.Time `json:"modified"`
	Name     string    `json:"name"`
	Email    *string   `json:"email"`
	Phone    *string   `json:"phone"`
	// Activation status of the distributor.
	Status Status `json:"status"`
	// Parent distributor of this distributor.
	Parent *DistributorAggregate `json:"parent,omitempty"`
	// Unique identifier of the parent distributor of the distributor.
	ParentID *string `json:"parentId"`
	// The computed permission key based off of the parent.
	PermissionKey string `json:"permissionKey"`
	// Parent distributor of this distributor.
	OnboardingLink *DistributorOnboardingLinkAggregate `json:"onboardingLink,omitempty"`
	// Unique identifier of the parent distributor of the distributor.
	OnboardingLinkID *string `json:"onboardingLinkId"`
	// Activation date of the Distributor.
	ActivatedDate time.Time `json:"activatedDate"`
	// Deactivation date of the Distributor.
	DeactivatedDate time.Time `json:"deactivatedDate"`
	// Archived date of the Distributor.
	ArchivedDate time.Time `json:"archivedDate"`
}

func (d DistributorAggregate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(d, "", false)
}

func (d *DistributorAggregate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &d, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *DistributorAggregate) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *DistributorAggregate) GetReferenceID() *string {
	if o == nil {
		return nil
	}
	return o.ReferenceID
}

func (o *DistributorAggregate) GetCreated() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.Created
}

func (o *DistributorAggregate) GetModified() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.Modified
}

func (o *DistributorAggregate) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *DistributorAggregate) GetEmail() *string {
	if o == nil {
		return nil
	}
	return o.Email
}

func (o *DistributorAggregate) GetPhone() *string {
	if o == nil {
		return nil
	}
	return o.Phone
}

func (o *DistributorAggregate) GetStatus() Status {
	if o == nil {
		return Status{}
	}
	return o.Status
}

func (o *DistributorAggregate) GetParent() *DistributorAggregate {
	if o == nil {
		return nil
	}
	return o.Parent
}

func (o *DistributorAggregate) GetParentID() *string {
	if o == nil {
		return nil
	}
	return o.ParentID
}

func (o *DistributorAggregate) GetPermissionKey() string {
	if o == nil {
		return ""
	}
	return o.PermissionKey
}

func (o *DistributorAggregate) GetOnboardingLink() *DistributorOnboardingLinkAggregate {
	if o == nil {
		return nil
	}
	return o.OnboardingLink
}

func (o *DistributorAggregate) GetOnboardingLinkID() *string {
	if o == nil {
		return nil
	}
	return o.OnboardingLinkID
}

func (o *DistributorAggregate) GetActivatedDate() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.ActivatedDate
}

func (o *DistributorAggregate) GetDeactivatedDate() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.DeactivatedDate
}

func (o *DistributorAggregate) GetArchivedDate() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.ArchivedDate
}
