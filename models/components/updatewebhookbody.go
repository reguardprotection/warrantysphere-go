// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/reguardprotection/warrantysphere/internal/utils"
)

type UpdateWebhookBody struct {
	// URL to update endpoint to point to
	URL *string `json:"url,omitempty"`
	// Description of endpoint
	Description *string `default:"null" json:"description"`
	// If endpoint is disabled
	Disabled *bool `json:"disabled,omitempty"`
	// Events to trigger the endpoint. Empty array will trigger all events
	EventTypes []string `json:"eventTypes,omitempty"`
	// Endpoint will only fire if event contains matching distributor ID(s). Empty array will match all events.
	DistributorIds []string `json:"distributorIds,omitempty"`
}

func (u UpdateWebhookBody) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(u, "", false)
}

func (u *UpdateWebhookBody) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &u, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *UpdateWebhookBody) GetURL() *string {
	if o == nil {
		return nil
	}
	return o.URL
}

func (o *UpdateWebhookBody) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *UpdateWebhookBody) GetDisabled() *bool {
	if o == nil {
		return nil
	}
	return o.Disabled
}

func (o *UpdateWebhookBody) GetEventTypes() []string {
	if o == nil {
		return nil
	}
	return o.EventTypes
}

func (o *UpdateWebhookBody) GetDistributorIds() []string {
	if o == nil {
		return nil
	}
	return o.DistributorIds
}
