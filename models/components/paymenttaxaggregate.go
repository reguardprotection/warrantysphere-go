// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type Payment struct {
}

type PaymentTaxAggregateType string

const (
	PaymentTaxAggregateTypeCity    PaymentTaxAggregateType = "city"
	PaymentTaxAggregateTypeCountry PaymentTaxAggregateType = "country"
	PaymentTaxAggregateTypeState   PaymentTaxAggregateType = "state"
	PaymentTaxAggregateTypeCounty  PaymentTaxAggregateType = "county"
	PaymentTaxAggregateTypeGst     PaymentTaxAggregateType = "gst"
	PaymentTaxAggregateTypeQst     PaymentTaxAggregateType = "qst"
	PaymentTaxAggregateTypePst     PaymentTaxAggregateType = "pst"
	PaymentTaxAggregateTypeOther   PaymentTaxAggregateType = "other"
)

func (e PaymentTaxAggregateType) ToPointer() *PaymentTaxAggregateType {
	return &e
}
func (e *PaymentTaxAggregateType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "city":
		fallthrough
	case "country":
		fallthrough
	case "state":
		fallthrough
	case "county":
		fallthrough
	case "gst":
		fallthrough
	case "qst":
		fallthrough
	case "pst":
		fallthrough
	case "other":
		*e = PaymentTaxAggregateType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PaymentTaxAggregateType: %v", v)
	}
}

type PaymentTaxAggregate struct {
	ID        string                  `json:"id"`
	PaymentID string                  `json:"paymentId"`
	Payment   Payment                 `json:"payment"`
	Type      PaymentTaxAggregateType `json:"type"`
	Label     string                  `json:"label"`
	Amount    int64                   `json:"amount"`
	Rate      int64                   `json:"rate"`
	City      string                  `json:"city"`
	County    *string                 `json:"county"`
	State     string                  `json:"state"`
	Country   string                  `json:"country"`
}

func (o *PaymentTaxAggregate) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *PaymentTaxAggregate) GetPaymentID() string {
	if o == nil {
		return ""
	}
	return o.PaymentID
}

func (o *PaymentTaxAggregate) GetPayment() Payment {
	if o == nil {
		return Payment{}
	}
	return o.Payment
}

func (o *PaymentTaxAggregate) GetType() PaymentTaxAggregateType {
	if o == nil {
		return PaymentTaxAggregateType("")
	}
	return o.Type
}

func (o *PaymentTaxAggregate) GetLabel() string {
	if o == nil {
		return ""
	}
	return o.Label
}

func (o *PaymentTaxAggregate) GetAmount() int64 {
	if o == nil {
		return 0
	}
	return o.Amount
}

func (o *PaymentTaxAggregate) GetRate() int64 {
	if o == nil {
		return 0
	}
	return o.Rate
}

func (o *PaymentTaxAggregate) GetCity() string {
	if o == nil {
		return ""
	}
	return o.City
}

func (o *PaymentTaxAggregate) GetCounty() *string {
	if o == nil {
		return nil
	}
	return o.County
}

func (o *PaymentTaxAggregate) GetState() string {
	if o == nil {
		return ""
	}
	return o.State
}

func (o *PaymentTaxAggregate) GetCountry() string {
	if o == nil {
		return ""
	}
	return o.Country
}
