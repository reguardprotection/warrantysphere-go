// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"github.com/reguardprotection/warrantysphere/internal/utils"
	"time"
)

type WarrantyAggregateStatus string

const (
	WarrantyAggregateStatusDraft      WarrantyAggregateStatus = "DRAFT"
	WarrantyAggregateStatusActivated  WarrantyAggregateStatus = "ACTIVATED"
	WarrantyAggregateStatusCancelled  WarrantyAggregateStatus = "CANCELLED"
	WarrantyAggregateStatusRegistered WarrantyAggregateStatus = "REGISTERED"
	WarrantyAggregateStatusExpired    WarrantyAggregateStatus = "EXPIRED"
)

func (e WarrantyAggregateStatus) ToPointer() *WarrantyAggregateStatus {
	return &e
}
func (e *WarrantyAggregateStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DRAFT":
		fallthrough
	case "ACTIVATED":
		fallthrough
	case "CANCELLED":
		fallthrough
	case "REGISTERED":
		fallthrough
	case "EXPIRED":
		*e = WarrantyAggregateStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for WarrantyAggregateStatus: %v", v)
	}
}

// WarrantyAggregatePolicy - Policy linked to the warranty.
type WarrantyAggregatePolicy struct {
}

// WarrantyAggregatePlan - Plan linked to the warranty.
type WarrantyAggregatePlan struct {
}

// WarrantyAggregateDistributorStatus - Activation status of the distributor.
type WarrantyAggregateDistributorStatus struct {
}

type WarrantyAggregateDistributor struct {
	// Unique identifier of the distributor
	ID string `json:"id"`
	// User-defined reference ID.
	ReferenceID *string `json:"referenceId"`
	// Datetime when the distributor was created.
	Created time.Time `json:"created"`
	// Datetime when the distributor was last modified.
	Modified time.Time `json:"modified"`
	Name     string    `json:"name"`
	Email    *string   `json:"email"`
	Phone    *string   `json:"phone"`
	// Activation status of the distributor.
	Status WarrantyAggregateDistributorStatus `json:"status"`
	// Parent distributor of this distributor.
	Parent *DistributorAggregate `json:"parent,omitempty"`
	// Unique identifier of the parent distributor of the distributor.
	ParentID *string `json:"parentId"`
	// The computed permission key based off of the parent.
	PermissionKey string `json:"permissionKey"`
	// Parent distributor of this distributor.
	OnboardingLink *DistributorOnboardingLinkAggregate `json:"onboardingLink,omitempty"`
	// Unique identifier of the parent distributor of the distributor.
	OnboardingLinkID *string `json:"onboardingLinkId"`
	// Activation date of the Distributor.
	ActivatedDate time.Time `json:"activatedDate"`
	// Deactivation date of the Distributor.
	DeactivatedDate time.Time `json:"deactivatedDate"`
	// Archived date of the Distributor.
	ArchivedDate time.Time `json:"archivedDate"`
}

func (w WarrantyAggregateDistributor) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(w, "", false)
}

func (w *WarrantyAggregateDistributor) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &w, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *WarrantyAggregateDistributor) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *WarrantyAggregateDistributor) GetReferenceID() *string {
	if o == nil {
		return nil
	}
	return o.ReferenceID
}

func (o *WarrantyAggregateDistributor) GetCreated() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.Created
}

func (o *WarrantyAggregateDistributor) GetModified() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.Modified
}

func (o *WarrantyAggregateDistributor) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *WarrantyAggregateDistributor) GetEmail() *string {
	if o == nil {
		return nil
	}
	return o.Email
}

func (o *WarrantyAggregateDistributor) GetPhone() *string {
	if o == nil {
		return nil
	}
	return o.Phone
}

func (o *WarrantyAggregateDistributor) GetStatus() WarrantyAggregateDistributorStatus {
	if o == nil {
		return WarrantyAggregateDistributorStatus{}
	}
	return o.Status
}

func (o *WarrantyAggregateDistributor) GetParent() *DistributorAggregate {
	if o == nil {
		return nil
	}
	return o.Parent
}

func (o *WarrantyAggregateDistributor) GetParentID() *string {
	if o == nil {
		return nil
	}
	return o.ParentID
}

func (o *WarrantyAggregateDistributor) GetPermissionKey() string {
	if o == nil {
		return ""
	}
	return o.PermissionKey
}

func (o *WarrantyAggregateDistributor) GetOnboardingLink() *DistributorOnboardingLinkAggregate {
	if o == nil {
		return nil
	}
	return o.OnboardingLink
}

func (o *WarrantyAggregateDistributor) GetOnboardingLinkID() *string {
	if o == nil {
		return nil
	}
	return o.OnboardingLinkID
}

func (o *WarrantyAggregateDistributor) GetActivatedDate() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.ActivatedDate
}

func (o *WarrantyAggregateDistributor) GetDeactivatedDate() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.DeactivatedDate
}

func (o *WarrantyAggregateDistributor) GetArchivedDate() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.ArchivedDate
}

type ShippingAddress struct {
	Line1   string  `json:"line1"`
	Line2   *string `json:"line2"`
	Zip     string  `json:"zip"`
	City    string  `json:"city"`
	State   string  `json:"state"`
	Country string  `json:"country"`
}

func (o *ShippingAddress) GetLine1() string {
	if o == nil {
		return ""
	}
	return o.Line1
}

func (o *ShippingAddress) GetLine2() *string {
	if o == nil {
		return nil
	}
	return o.Line2
}

func (o *ShippingAddress) GetZip() string {
	if o == nil {
		return ""
	}
	return o.Zip
}

func (o *ShippingAddress) GetCity() string {
	if o == nil {
		return ""
	}
	return o.City
}

func (o *ShippingAddress) GetState() string {
	if o == nil {
		return ""
	}
	return o.State
}

func (o *ShippingAddress) GetCountry() string {
	if o == nil {
		return ""
	}
	return o.Country
}

// Metadata - JSON object of the metadata fields to track for the warranty.
type Metadata struct {
}

type WarrantyAggregateAddress struct {
}

// WarrantyAggregateCreatedBy - Data of the user who created/uploaded this document.
type WarrantyAggregateCreatedBy struct {
	// Unique identifier for the user.
	ID string `json:"id"`
	// Datetime when the object was created.
	Created time.Time `json:"created"`
	// Datetime when the object was last modified.
	Modified      time.Time                 `json:"modified"`
	Email         string                    `json:"email"`
	EmailVerified *bool                     `default:"false" json:"emailVerified"`
	PhoneNumber   *string                   `default:"null" json:"phoneNumber"`
	DisplayName   string                    `json:"displayName"`
	FriendlyName  *string                   `default:"null" json:"friendlyName"`
	PhotoURL      *string                   `default:"null" json:"photoURL"`
	Address       *WarrantyAggregateAddress `json:"address"`
	Birthday      *time.Time                `default:"null" json:"birthday"`
	LastSignedIn  *time.Time                `default:"null" json:"lastSignedIn"`
}

func (w WarrantyAggregateCreatedBy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(w, "", false)
}

func (w *WarrantyAggregateCreatedBy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &w, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *WarrantyAggregateCreatedBy) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *WarrantyAggregateCreatedBy) GetCreated() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.Created
}

func (o *WarrantyAggregateCreatedBy) GetModified() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.Modified
}

func (o *WarrantyAggregateCreatedBy) GetEmail() string {
	if o == nil {
		return ""
	}
	return o.Email
}

func (o *WarrantyAggregateCreatedBy) GetEmailVerified() *bool {
	if o == nil {
		return nil
	}
	return o.EmailVerified
}

func (o *WarrantyAggregateCreatedBy) GetPhoneNumber() *string {
	if o == nil {
		return nil
	}
	return o.PhoneNumber
}

func (o *WarrantyAggregateCreatedBy) GetDisplayName() string {
	if o == nil {
		return ""
	}
	return o.DisplayName
}

func (o *WarrantyAggregateCreatedBy) GetFriendlyName() *string {
	if o == nil {
		return nil
	}
	return o.FriendlyName
}

func (o *WarrantyAggregateCreatedBy) GetPhotoURL() *string {
	if o == nil {
		return nil
	}
	return o.PhotoURL
}

func (o *WarrantyAggregateCreatedBy) GetAddress() *WarrantyAggregateAddress {
	if o == nil {
		return nil
	}
	return o.Address
}

func (o *WarrantyAggregateCreatedBy) GetBirthday() *time.Time {
	if o == nil {
		return nil
	}
	return o.Birthday
}

func (o *WarrantyAggregateCreatedBy) GetLastSignedIn() *time.Time {
	if o == nil {
		return nil
	}
	return o.LastSignedIn
}

type WarrantyAggregateContractAddress struct {
}

// WarrantyAggregateModifiedBy - Data of the user who last modified this document (title, description, etc.).
type WarrantyAggregateModifiedBy struct {
	// Unique identifier for the user.
	ID string `json:"id"`
	// Datetime when the object was created.
	Created time.Time `json:"created"`
	// Datetime when the object was last modified.
	Modified      time.Time                         `json:"modified"`
	Email         string                            `json:"email"`
	EmailVerified *bool                             `default:"false" json:"emailVerified"`
	PhoneNumber   *string                           `default:"null" json:"phoneNumber"`
	DisplayName   string                            `json:"displayName"`
	FriendlyName  *string                           `default:"null" json:"friendlyName"`
	PhotoURL      *string                           `default:"null" json:"photoURL"`
	Address       *WarrantyAggregateContractAddress `json:"address"`
	Birthday      *time.Time                        `default:"null" json:"birthday"`
	LastSignedIn  *time.Time                        `default:"null" json:"lastSignedIn"`
}

func (w WarrantyAggregateModifiedBy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(w, "", false)
}

func (w *WarrantyAggregateModifiedBy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &w, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *WarrantyAggregateModifiedBy) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *WarrantyAggregateModifiedBy) GetCreated() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.Created
}

func (o *WarrantyAggregateModifiedBy) GetModified() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.Modified
}

func (o *WarrantyAggregateModifiedBy) GetEmail() string {
	if o == nil {
		return ""
	}
	return o.Email
}

func (o *WarrantyAggregateModifiedBy) GetEmailVerified() *bool {
	if o == nil {
		return nil
	}
	return o.EmailVerified
}

func (o *WarrantyAggregateModifiedBy) GetPhoneNumber() *string {
	if o == nil {
		return nil
	}
	return o.PhoneNumber
}

func (o *WarrantyAggregateModifiedBy) GetDisplayName() string {
	if o == nil {
		return ""
	}
	return o.DisplayName
}

func (o *WarrantyAggregateModifiedBy) GetFriendlyName() *string {
	if o == nil {
		return nil
	}
	return o.FriendlyName
}

func (o *WarrantyAggregateModifiedBy) GetPhotoURL() *string {
	if o == nil {
		return nil
	}
	return o.PhotoURL
}

func (o *WarrantyAggregateModifiedBy) GetAddress() *WarrantyAggregateContractAddress {
	if o == nil {
		return nil
	}
	return o.Address
}

func (o *WarrantyAggregateModifiedBy) GetBirthday() *time.Time {
	if o == nil {
		return nil
	}
	return o.Birthday
}

func (o *WarrantyAggregateModifiedBy) GetLastSignedIn() *time.Time {
	if o == nil {
		return nil
	}
	return o.LastSignedIn
}

type WarrantyAggregateContractDeletedByAddress struct {
}

// WarrantyAggregateDeletedBy - Data of the user who deleted this document.
type WarrantyAggregateDeletedBy struct {
	// Unique identifier for the user.
	ID string `json:"id"`
	// Datetime when the object was created.
	Created time.Time `json:"created"`
	// Datetime when the object was last modified.
	Modified      time.Time                                  `json:"modified"`
	Email         string                                     `json:"email"`
	EmailVerified *bool                                      `default:"false" json:"emailVerified"`
	PhoneNumber   *string                                    `default:"null" json:"phoneNumber"`
	DisplayName   string                                     `json:"displayName"`
	FriendlyName  *string                                    `default:"null" json:"friendlyName"`
	PhotoURL      *string                                    `default:"null" json:"photoURL"`
	Address       *WarrantyAggregateContractDeletedByAddress `json:"address"`
	Birthday      *time.Time                                 `default:"null" json:"birthday"`
	LastSignedIn  *time.Time                                 `default:"null" json:"lastSignedIn"`
}

func (w WarrantyAggregateDeletedBy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(w, "", false)
}

func (w *WarrantyAggregateDeletedBy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &w, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *WarrantyAggregateDeletedBy) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *WarrantyAggregateDeletedBy) GetCreated() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.Created
}

func (o *WarrantyAggregateDeletedBy) GetModified() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.Modified
}

func (o *WarrantyAggregateDeletedBy) GetEmail() string {
	if o == nil {
		return ""
	}
	return o.Email
}

func (o *WarrantyAggregateDeletedBy) GetEmailVerified() *bool {
	if o == nil {
		return nil
	}
	return o.EmailVerified
}

func (o *WarrantyAggregateDeletedBy) GetPhoneNumber() *string {
	if o == nil {
		return nil
	}
	return o.PhoneNumber
}

func (o *WarrantyAggregateDeletedBy) GetDisplayName() string {
	if o == nil {
		return ""
	}
	return o.DisplayName
}

func (o *WarrantyAggregateDeletedBy) GetFriendlyName() *string {
	if o == nil {
		return nil
	}
	return o.FriendlyName
}

func (o *WarrantyAggregateDeletedBy) GetPhotoURL() *string {
	if o == nil {
		return nil
	}
	return o.PhotoURL
}

func (o *WarrantyAggregateDeletedBy) GetAddress() *WarrantyAggregateContractDeletedByAddress {
	if o == nil {
		return nil
	}
	return o.Address
}

func (o *WarrantyAggregateDeletedBy) GetBirthday() *time.Time {
	if o == nil {
		return nil
	}
	return o.Birthday
}

func (o *WarrantyAggregateDeletedBy) GetLastSignedIn() *time.Time {
	if o == nil {
		return nil
	}
	return o.LastSignedIn
}

// WarrantyAggregateMetadata - JSON object storing abitrary user-defined metadata.
//
// Some elements may be automatically populated by the system or various document processors.
type WarrantyAggregateMetadata struct {
}

type WarrantyAggregateFeed string

const (
	WarrantyAggregateFeedStaff    WarrantyAggregateFeed = "staff"
	WarrantyAggregateFeedCustomer WarrantyAggregateFeed = "customer"
)

func (e WarrantyAggregateFeed) ToPointer() *WarrantyAggregateFeed {
	return &e
}
func (e *WarrantyAggregateFeed) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "staff":
		fallthrough
	case "customer":
		*e = WarrantyAggregateFeed(v)
		return nil
	default:
		return fmt.Errorf("invalid value for WarrantyAggregateFeed: %v", v)
	}
}

// Contract - Warranty contract
type Contract struct {
	// Unique identifier of the document.
	ID string `json:"id"`
	// User-defined unique ID for the document (for reference only).
	ReferenceID *string `json:"referenceId"`
	// Datetime when the object was created.
	Created time.Time `json:"created"`
	// Unique ID of the user who created/uploaded this document.
	CreatedByID *string `json:"createdById"`
	// Data of the user who created/uploaded this document.
	CreatedBy *WarrantyAggregateCreatedBy `json:"createdBy,omitempty"`
	// Datetime when the object was last modified.
	Modified time.Time `json:"modified"`
	// Unique ID of the user who last modified this document (title, description, etc.).
	ModifiedByID *string `json:"modifiedById"`
	// Data of the user who last modified this document (title, description, etc.).
	ModifiedBy *WarrantyAggregateModifiedBy `json:"modifiedBy,omitempty"`
	// Datetime when the object was deleted.
	Deleted *time.Time `json:"deleted"`
	// Unique ID of the user who deleted this document.
	DeletedByID *string `json:"deletedById"`
	// Data of the user who deleted this document.
	DeletedBy *WarrantyAggregateDeletedBy `json:"deletedBy,omitempty"`
	// Title of the document.
	Title string `json:"title"`
	// Short text description of the document.
	Description *string `json:"description"`
	// Mime type of the document
	MimeType string `json:"mimeType"`
	// JSON object storing abitrary user-defined metadata.
	//
	// Some elements may be automatically populated by the system or various document processors.
	Metadata         WarrantyAggregateMetadata `json:"metadata"`
	Extension        *string                   `json:"extension"`
	OriginalFilename *string                   `json:"originalFilename"`
	// Boolean flag indicating if a file may or may not be accessed with a public URL. Private files can only be accessed when their downloadURL includes an authentication token (short-lived).
	PrivateFile *bool `default:"true" json:"privateFile"`
	// System-defined unique identifier.
	ExternalID *string `json:"externalId"`
	// Download URL of the document. Private document downloadURLs include a short-lived authentication token.
	DownloadURL *string `json:"downloadUrl"`
	// List of processing results for this document (when applicable).
	ProcessingResults []StorageItemProcessorResultAggregate `json:"processingResults,omitempty"`
	// The feeds of users who can view the document
	Feed []WarrantyAggregateFeed `json:"feed"`
}

func (c Contract) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *Contract) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *Contract) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *Contract) GetReferenceID() *string {
	if o == nil {
		return nil
	}
	return o.ReferenceID
}

func (o *Contract) GetCreated() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.Created
}

func (o *Contract) GetCreatedByID() *string {
	if o == nil {
		return nil
	}
	return o.CreatedByID
}

func (o *Contract) GetCreatedBy() *WarrantyAggregateCreatedBy {
	if o == nil {
		return nil
	}
	return o.CreatedBy
}

func (o *Contract) GetModified() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.Modified
}

func (o *Contract) GetModifiedByID() *string {
	if o == nil {
		return nil
	}
	return o.ModifiedByID
}

func (o *Contract) GetModifiedBy() *WarrantyAggregateModifiedBy {
	if o == nil {
		return nil
	}
	return o.ModifiedBy
}

func (o *Contract) GetDeleted() *time.Time {
	if o == nil {
		return nil
	}
	return o.Deleted
}

func (o *Contract) GetDeletedByID() *string {
	if o == nil {
		return nil
	}
	return o.DeletedByID
}

func (o *Contract) GetDeletedBy() *WarrantyAggregateDeletedBy {
	if o == nil {
		return nil
	}
	return o.DeletedBy
}

func (o *Contract) GetTitle() string {
	if o == nil {
		return ""
	}
	return o.Title
}

func (o *Contract) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *Contract) GetMimeType() string {
	if o == nil {
		return ""
	}
	return o.MimeType
}

func (o *Contract) GetMetadata() WarrantyAggregateMetadata {
	if o == nil {
		return WarrantyAggregateMetadata{}
	}
	return o.Metadata
}

func (o *Contract) GetExtension() *string {
	if o == nil {
		return nil
	}
	return o.Extension
}

func (o *Contract) GetOriginalFilename() *string {
	if o == nil {
		return nil
	}
	return o.OriginalFilename
}

func (o *Contract) GetPrivateFile() *bool {
	if o == nil {
		return nil
	}
	return o.PrivateFile
}

func (o *Contract) GetExternalID() *string {
	if o == nil {
		return nil
	}
	return o.ExternalID
}

func (o *Contract) GetDownloadURL() *string {
	if o == nil {
		return nil
	}
	return o.DownloadURL
}

func (o *Contract) GetProcessingResults() []StorageItemProcessorResultAggregate {
	if o == nil {
		return nil
	}
	return o.ProcessingResults
}

func (o *Contract) GetFeed() []WarrantyAggregateFeed {
	if o == nil {
		return []WarrantyAggregateFeed{}
	}
	return o.Feed
}

type WarrantyAggregate struct {
	// Unique identifier of the warranty.
	ID string `json:"id"`
	// User-defined reference ID.
	ReferenceID *string                 `json:"referenceId"`
	Status      WarrantyAggregateStatus `json:"status"`
	// Datetime when the object was created.
	Created time.Time `json:"created"`
	// Datetime when the object was last modified.
	Modified time.Time `json:"modified"`
	// Formatted unique identifier for the warranty contract.
	ContractNumber string `json:"contractNumber"`
	// Datetime when the term of the warranty starts.
	TermStart time.Time `json:"termStart"`
	// Number of days after the day of the term start (exclusive), during which the warranty remains active.
	TermDuration int64 `json:"termDuration"`
	// Datetime when the term of the warranty ends.
	ExpiryDate time.Time `json:"expiryDate"`
	// Datetime when the warranty was activated by the customer.
	ActivationDate time.Time `json:"activationDate"`
	// Datetime when the warranty was canceled.
	CancellationDate time.Time `json:"cancellationDate"`
	// Datetime when the warranty was finalized.
	FinalizedDate time.Time `json:"finalizedDate"`
	// Datetime when the customer can no longer activate.
	ActivationDeadline time.Time `json:"activationDeadline"`
	// Policy linked to the warranty.
	Policy *WarrantyAggregatePolicy `json:"policy,omitempty"`
	// Unique ID of the policy linked to this warranty.
	PolicyID          string `json:"policyId"`
	TermID            string `json:"termId"`
	PaymentScheduleID string `json:"paymentScheduleId"`
	// Plan linked to the warranty.
	Plan *WarrantyAggregatePlan `json:"plan,omitempty"`
	// Unique ID of the policy linked to this warranty.
	PlanID string `json:"planId"`
	// Customer linked to the warranty.
	Customer *CustomerAggregate `json:"customer,omitempty"`
	// Unique ID of the customer linked to this warranty.
	CustomerID string `json:"customerId"`
	// Asset linked to the warranty.
	Asset *AssetAggregate `json:"asset,omitempty"`
	// Unique ID of the asset linked to this warranty.
	AssetID string `json:"assetId"`
	// Customer possesion date.
	TransactionCloseDate time.Time                     `json:"transactionCloseDate"`
	Distributor          *WarrantyAggregateDistributor `json:"distributor,omitempty"`
	DistributorID        *string                       `json:"distributorId"`
	// Submission linked to the warranty.
	PropertySetSubmission *PropertySetSubmissionAggregate `json:"propertySetSubmission,omitempty"`
	// Unique ID of the submission linked to this warranty.
	PropertySetSubmissionID string           `json:"propertySetSubmissionId"`
	ShippingAddress         *ShippingAddress `json:"shippingAddress"`
	// Fees associated with the warranty.
	Fees [][]string `json:"fees,omitempty"`
	// JSON object of the metadata fields to track for the warranty.
	Metadata *Metadata `json:"metadata,omitempty"`
	// ID of the warranty contract.
	ContractID *string `json:"contractId"`
	// Warranty contract
	Contract *Contract `json:"contract"`
}

func (w WarrantyAggregate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(w, "", false)
}

func (w *WarrantyAggregate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &w, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *WarrantyAggregate) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *WarrantyAggregate) GetReferenceID() *string {
	if o == nil {
		return nil
	}
	return o.ReferenceID
}

func (o *WarrantyAggregate) GetStatus() WarrantyAggregateStatus {
	if o == nil {
		return WarrantyAggregateStatus("")
	}
	return o.Status
}

func (o *WarrantyAggregate) GetCreated() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.Created
}

func (o *WarrantyAggregate) GetModified() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.Modified
}

func (o *WarrantyAggregate) GetContractNumber() string {
	if o == nil {
		return ""
	}
	return o.ContractNumber
}

func (o *WarrantyAggregate) GetTermStart() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.TermStart
}

func (o *WarrantyAggregate) GetTermDuration() int64 {
	if o == nil {
		return 0
	}
	return o.TermDuration
}

func (o *WarrantyAggregate) GetExpiryDate() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.ExpiryDate
}

func (o *WarrantyAggregate) GetActivationDate() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.ActivationDate
}

func (o *WarrantyAggregate) GetCancellationDate() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CancellationDate
}

func (o *WarrantyAggregate) GetFinalizedDate() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.FinalizedDate
}

func (o *WarrantyAggregate) GetActivationDeadline() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.ActivationDeadline
}

func (o *WarrantyAggregate) GetPolicy() *WarrantyAggregatePolicy {
	if o == nil {
		return nil
	}
	return o.Policy
}

func (o *WarrantyAggregate) GetPolicyID() string {
	if o == nil {
		return ""
	}
	return o.PolicyID
}

func (o *WarrantyAggregate) GetTermID() string {
	if o == nil {
		return ""
	}
	return o.TermID
}

func (o *WarrantyAggregate) GetPaymentScheduleID() string {
	if o == nil {
		return ""
	}
	return o.PaymentScheduleID
}

func (o *WarrantyAggregate) GetPlan() *WarrantyAggregatePlan {
	if o == nil {
		return nil
	}
	return o.Plan
}

func (o *WarrantyAggregate) GetPlanID() string {
	if o == nil {
		return ""
	}
	return o.PlanID
}

func (o *WarrantyAggregate) GetCustomer() *CustomerAggregate {
	if o == nil {
		return nil
	}
	return o.Customer
}

func (o *WarrantyAggregate) GetCustomerID() string {
	if o == nil {
		return ""
	}
	return o.CustomerID
}

func (o *WarrantyAggregate) GetAsset() *AssetAggregate {
	if o == nil {
		return nil
	}
	return o.Asset
}

func (o *WarrantyAggregate) GetAssetID() string {
	if o == nil {
		return ""
	}
	return o.AssetID
}

func (o *WarrantyAggregate) GetTransactionCloseDate() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.TransactionCloseDate
}

func (o *WarrantyAggregate) GetDistributor() *WarrantyAggregateDistributor {
	if o == nil {
		return nil
	}
	return o.Distributor
}

func (o *WarrantyAggregate) GetDistributorID() *string {
	if o == nil {
		return nil
	}
	return o.DistributorID
}

func (o *WarrantyAggregate) GetPropertySetSubmission() *PropertySetSubmissionAggregate {
	if o == nil {
		return nil
	}
	return o.PropertySetSubmission
}

func (o *WarrantyAggregate) GetPropertySetSubmissionID() string {
	if o == nil {
		return ""
	}
	return o.PropertySetSubmissionID
}

func (o *WarrantyAggregate) GetShippingAddress() *ShippingAddress {
	if o == nil {
		return nil
	}
	return o.ShippingAddress
}

func (o *WarrantyAggregate) GetFees() [][]string {
	if o == nil {
		return nil
	}
	return o.Fees
}

func (o *WarrantyAggregate) GetMetadata() *Metadata {
	if o == nil {
		return nil
	}
	return o.Metadata
}

func (o *WarrantyAggregate) GetContractID() *string {
	if o == nil {
		return nil
	}
	return o.ContractID
}

func (o *WarrantyAggregate) GetContract() *Contract {
	if o == nil {
		return nil
	}
	return o.Contract
}
