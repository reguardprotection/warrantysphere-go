// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"errors"
	"fmt"
	"github.com/reguardprotection/warrantysphere/internal/utils"
)

type UpdateAccountDtoOwnerType string

const (
	UpdateAccountDtoOwnerTypeAccountBusinessOwnerDto   UpdateAccountDtoOwnerType = "AccountBusinessOwnerDto"
	UpdateAccountDtoOwnerTypeAccountIndividualOwnerDto UpdateAccountDtoOwnerType = "AccountIndividualOwnerDto"
)

type UpdateAccountDtoOwner struct {
	AccountBusinessOwnerDto   *AccountBusinessOwnerDto
	AccountIndividualOwnerDto *AccountIndividualOwnerDto

	Type UpdateAccountDtoOwnerType
}

func CreateUpdateAccountDtoOwnerAccountBusinessOwnerDto(accountBusinessOwnerDto AccountBusinessOwnerDto) UpdateAccountDtoOwner {
	typ := UpdateAccountDtoOwnerTypeAccountBusinessOwnerDto

	return UpdateAccountDtoOwner{
		AccountBusinessOwnerDto: &accountBusinessOwnerDto,
		Type:                    typ,
	}
}

func CreateUpdateAccountDtoOwnerAccountIndividualOwnerDto(accountIndividualOwnerDto AccountIndividualOwnerDto) UpdateAccountDtoOwner {
	typ := UpdateAccountDtoOwnerTypeAccountIndividualOwnerDto

	return UpdateAccountDtoOwner{
		AccountIndividualOwnerDto: &accountIndividualOwnerDto,
		Type:                      typ,
	}
}

func (u *UpdateAccountDtoOwner) UnmarshalJSON(data []byte) error {

	var accountIndividualOwnerDto AccountIndividualOwnerDto = AccountIndividualOwnerDto{}
	if err := utils.UnmarshalJSON(data, &accountIndividualOwnerDto, "", true, true); err == nil {
		u.AccountIndividualOwnerDto = &accountIndividualOwnerDto
		u.Type = UpdateAccountDtoOwnerTypeAccountIndividualOwnerDto
		return nil
	}

	var accountBusinessOwnerDto AccountBusinessOwnerDto = AccountBusinessOwnerDto{}
	if err := utils.UnmarshalJSON(data, &accountBusinessOwnerDto, "", true, true); err == nil {
		u.AccountBusinessOwnerDto = &accountBusinessOwnerDto
		u.Type = UpdateAccountDtoOwnerTypeAccountBusinessOwnerDto
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for UpdateAccountDtoOwner", string(data))
}

func (u UpdateAccountDtoOwner) MarshalJSON() ([]byte, error) {
	if u.AccountBusinessOwnerDto != nil {
		return utils.MarshalJSON(u.AccountBusinessOwnerDto, "", true)
	}

	if u.AccountIndividualOwnerDto != nil {
		return utils.MarshalJSON(u.AccountIndividualOwnerDto, "", true)
	}

	return nil, errors.New("could not marshal union type UpdateAccountDtoOwner: all fields are null")
}

type UpdateAccountDto struct {
	// Name of the account
	Name *string `json:"name,omitempty"`
	// Short-form description of the account
	Description *string               `json:"description,omitempty"`
	Owner       UpdateAccountDtoOwner `json:"owner"`
}

func (o *UpdateAccountDto) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *UpdateAccountDto) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *UpdateAccountDto) GetOwner() UpdateAccountDtoOwner {
	if o == nil {
		return UpdateAccountDtoOwner{}
	}
	return o.Owner
}
