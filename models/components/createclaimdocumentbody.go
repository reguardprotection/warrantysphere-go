// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type File struct {
	FileName string `multipartForm:"name=file"`
	// This field accepts []byte data or io.Reader implementations, such as *os.File.
	Content any `multipartForm:"content"`
}

func (o *File) GetFileName() string {
	if o == nil {
		return ""
	}
	return o.FileName
}

func (o *File) GetContent() any {
	if o == nil {
		return nil
	}
	return o.Content
}

type CreateClaimDocumentBody struct {
	// Binary data of the file to be uploaded.
	File File `multipartForm:"file"`
	// User-defined unique identifier to be associated with the document.
	ReferenceID *string `multipartForm:"name=referenceId"`
	// Title of the document.
	Title string `multipartForm:"name=title"`
	// Description of the document.
	Description *string `multipartForm:"name=description"`
	// File extension to be used when storing the file.
	//
	// If not provided, the file will be stored without any extension.
	Extension *string `multipartForm:"name=extension"`
	// The feeds of users who can view the document.
	Feed [][]string `multipartForm:"name=feed"`
}

func (o *CreateClaimDocumentBody) GetFile() File {
	if o == nil {
		return File{}
	}
	return o.File
}

func (o *CreateClaimDocumentBody) GetReferenceID() *string {
	if o == nil {
		return nil
	}
	return o.ReferenceID
}

func (o *CreateClaimDocumentBody) GetTitle() string {
	if o == nil {
		return ""
	}
	return o.Title
}

func (o *CreateClaimDocumentBody) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *CreateClaimDocumentBody) GetExtension() *string {
	if o == nil {
		return nil
	}
	return o.Extension
}

func (o *CreateClaimDocumentBody) GetFeed() [][]string {
	if o == nil {
		return nil
	}
	return o.Feed
}
