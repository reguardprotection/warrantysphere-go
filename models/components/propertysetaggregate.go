// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/reguardprotection/warrantysphere/internal/utils"
	"time"
)

type PropertySetAggregate struct {
	// Unique identifier for a property set.
	ID string `json:"id"`
	// Display name of the property set.
	Name string `json:"name"`
	// Icon of the property set.
	Icon string `json:"icon"`
	// List of properties in the property set.
	Properties []string `json:"properties"`
	// Datetime when the object was created.
	Created time.Time `json:"created"`
	// Datetime when the object was last modified.
	Modified time.Time `json:"modified"`
}

func (p PropertySetAggregate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PropertySetAggregate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *PropertySetAggregate) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *PropertySetAggregate) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *PropertySetAggregate) GetIcon() string {
	if o == nil {
		return ""
	}
	return o.Icon
}

func (o *PropertySetAggregate) GetProperties() []string {
	if o == nil {
		return []string{}
	}
	return o.Properties
}

func (o *PropertySetAggregate) GetCreated() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.Created
}

func (o *PropertySetAggregate) GetModified() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.Modified
}
