// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type CreateClaimNoteCommandRequestFeed string

const (
	CreateClaimNoteCommandRequestFeedStaff    CreateClaimNoteCommandRequestFeed = "staff"
	CreateClaimNoteCommandRequestFeedCustomer CreateClaimNoteCommandRequestFeed = "customer"
)

func (e CreateClaimNoteCommandRequestFeed) ToPointer() *CreateClaimNoteCommandRequestFeed {
	return &e
}
func (e *CreateClaimNoteCommandRequestFeed) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "staff":
		fallthrough
	case "customer":
		*e = CreateClaimNoteCommandRequestFeed(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateClaimNoteCommandRequestFeed: %v", v)
	}
}

type CreateClaimNoteCommandRequest struct {
	// The title of the note.
	Title *string `json:"title,omitempty"`
	// The content associated with the note.
	Content string `json:"content"`
	// The feeds of users who can view the note, defaults to staff only.
	Feed []CreateClaimNoteCommandRequestFeed `json:"feed,omitempty"`
}

func (o *CreateClaimNoteCommandRequest) GetTitle() *string {
	if o == nil {
		return nil
	}
	return o.Title
}

func (o *CreateClaimNoteCommandRequest) GetContent() string {
	if o == nil {
		return ""
	}
	return o.Content
}

func (o *CreateClaimNoteCommandRequest) GetFeed() []CreateClaimNoteCommandRequestFeed {
	if o == nil {
		return nil
	}
	return o.Feed
}
