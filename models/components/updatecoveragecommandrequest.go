// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type UpdateCoverageCommandRequest struct {
	// Whether or not the command should create a new draft policy if required.
	CanCreateNewVersion bool `json:"canCreateNewVersion"`
	// Coverage order
	Order *float64 `json:"order,omitempty"`
	// Title of the coverage
	Title *string `json:"title,omitempty"`
	// Description of the coverage
	Description *string `json:"description,omitempty"`
	ReferenceID *string `json:"referenceId,omitempty"`
	// The group the coverage is categorized in
	Group *string `json:"group,omitempty"`
	// Details about what is included in the coverage
	Inclusions *string `json:"inclusions,omitempty"`
	// Details about what is excluded in the coverage
	Exclusions *string `json:"exclusions,omitempty"`
}

func (o *UpdateCoverageCommandRequest) GetCanCreateNewVersion() bool {
	if o == nil {
		return false
	}
	return o.CanCreateNewVersion
}

func (o *UpdateCoverageCommandRequest) GetOrder() *float64 {
	if o == nil {
		return nil
	}
	return o.Order
}

func (o *UpdateCoverageCommandRequest) GetTitle() *string {
	if o == nil {
		return nil
	}
	return o.Title
}

func (o *UpdateCoverageCommandRequest) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *UpdateCoverageCommandRequest) GetReferenceID() *string {
	if o == nil {
		return nil
	}
	return o.ReferenceID
}

func (o *UpdateCoverageCommandRequest) GetGroup() *string {
	if o == nil {
		return nil
	}
	return o.Group
}

func (o *UpdateCoverageCommandRequest) GetInclusions() *string {
	if o == nil {
		return nil
	}
	return o.Inclusions
}

func (o *UpdateCoverageCommandRequest) GetExclusions() *string {
	if o == nil {
		return nil
	}
	return o.Exclusions
}
