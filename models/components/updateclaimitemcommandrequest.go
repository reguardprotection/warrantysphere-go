// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

// UpdateClaimItemCommandRequestAmount - Amounts tracked for the associated claim item.
type UpdateClaimItemCommandRequestAmount struct {
	// Standard amount (in cents) of the claim.
	Standard *float64 `json:"standard,omitempty"`
	// Goodwill amount (in cents) of the claim.
	Goodwill *float64 `json:"goodwill,omitempty"`
	// Total amount (in cents) of the claim combining standard and goodwill amounts.
	Total *float64 `json:"total,omitempty"`
}

func (o *UpdateClaimItemCommandRequestAmount) GetStandard() *float64 {
	if o == nil {
		return nil
	}
	return o.Standard
}

func (o *UpdateClaimItemCommandRequestAmount) GetGoodwill() *float64 {
	if o == nil {
		return nil
	}
	return o.Goodwill
}

func (o *UpdateClaimItemCommandRequestAmount) GetTotal() *float64 {
	if o == nil {
		return nil
	}
	return o.Total
}

// UpdateClaimItemCommandRequestCure - Cure associated with the claim item.
type UpdateClaimItemCommandRequestCure struct {
	// Title of the cure aassociated with the claim item.
	Title *string `json:"title"`
	// Description of the cure aassociated with the claim item.
	Description *string `json:"description"`
	// Estimated amount (in cents) of the cure.
	EstimatedCost *float64 `json:"estimatedCost"`
}

func (o *UpdateClaimItemCommandRequestCure) GetTitle() *string {
	if o == nil {
		return nil
	}
	return o.Title
}

func (o *UpdateClaimItemCommandRequestCure) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *UpdateClaimItemCommandRequestCure) GetEstimatedCost() *float64 {
	if o == nil {
		return nil
	}
	return o.EstimatedCost
}

// UpdateClaimItemCommandRequestResolution - Resolution associated with the claim item.
type UpdateClaimItemCommandRequestResolution struct {
	// Title of the cure associated with the claim item.
	Title *string `json:"title"`
	// Description of the cure aassociated with the claim item.
	Description *string `json:"description"`
	// Actual amount (in cents) of the cure.
	ActualCost *float64 `json:"actualCost"`
}

func (o *UpdateClaimItemCommandRequestResolution) GetTitle() *string {
	if o == nil {
		return nil
	}
	return o.Title
}

func (o *UpdateClaimItemCommandRequestResolution) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *UpdateClaimItemCommandRequestResolution) GetActualCost() *float64 {
	if o == nil {
		return nil
	}
	return o.ActualCost
}

type UpdateClaimItemCommandRequest struct {
	// Unique identifier of the coverage associated with the claim item.
	CoverageID *string `json:"coverageId,omitempty"`
	// Description of the claim item if no coverage was given.
	Description *string `json:"description,omitempty"`
	// Amounts tracked for the associated claim item.
	Amount *UpdateClaimItemCommandRequestAmount `json:"amount,omitempty"`
	// Cure associated with the claim item.
	Cure *UpdateClaimItemCommandRequestCure `json:"cure,omitempty"`
	// Resolution associated with the claim item.
	Resolution *UpdateClaimItemCommandRequestResolution `json:"resolution,omitempty"`
}

func (o *UpdateClaimItemCommandRequest) GetCoverageID() *string {
	if o == nil {
		return nil
	}
	return o.CoverageID
}

func (o *UpdateClaimItemCommandRequest) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *UpdateClaimItemCommandRequest) GetAmount() *UpdateClaimItemCommandRequestAmount {
	if o == nil {
		return nil
	}
	return o.Amount
}

func (o *UpdateClaimItemCommandRequest) GetCure() *UpdateClaimItemCommandRequestCure {
	if o == nil {
		return nil
	}
	return o.Cure
}

func (o *UpdateClaimItemCommandRequest) GetResolution() *UpdateClaimItemCommandRequestResolution {
	if o == nil {
		return nil
	}
	return o.Resolution
}
