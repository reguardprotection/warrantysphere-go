// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"github.com/reguardprotection/warrantysphere/internal/utils"
	"time"
)

type StorageItemAggregateAddress struct {
}

// StorageItemAggregateCreatedBy - Data of the user who created/uploaded this document.
type StorageItemAggregateCreatedBy struct {
	// Unique identifier for the user.
	ID string `json:"id"`
	// Datetime when the object was created.
	Created time.Time `json:"created"`
	// Datetime when the object was last modified.
	Modified      time.Time                    `json:"modified"`
	Email         string                       `json:"email"`
	EmailVerified *bool                        `default:"false" json:"emailVerified"`
	PhoneNumber   *string                      `default:"null" json:"phoneNumber"`
	DisplayName   string                       `json:"displayName"`
	FriendlyName  *string                      `default:"null" json:"friendlyName"`
	PhotoURL      *string                      `default:"null" json:"photoURL"`
	Address       *StorageItemAggregateAddress `json:"address"`
	Birthday      *time.Time                   `default:"null" json:"birthday"`
	LastSignedIn  *time.Time                   `default:"null" json:"lastSignedIn"`
}

func (s StorageItemAggregateCreatedBy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *StorageItemAggregateCreatedBy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *StorageItemAggregateCreatedBy) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *StorageItemAggregateCreatedBy) GetCreated() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.Created
}

func (o *StorageItemAggregateCreatedBy) GetModified() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.Modified
}

func (o *StorageItemAggregateCreatedBy) GetEmail() string {
	if o == nil {
		return ""
	}
	return o.Email
}

func (o *StorageItemAggregateCreatedBy) GetEmailVerified() *bool {
	if o == nil {
		return nil
	}
	return o.EmailVerified
}

func (o *StorageItemAggregateCreatedBy) GetPhoneNumber() *string {
	if o == nil {
		return nil
	}
	return o.PhoneNumber
}

func (o *StorageItemAggregateCreatedBy) GetDisplayName() string {
	if o == nil {
		return ""
	}
	return o.DisplayName
}

func (o *StorageItemAggregateCreatedBy) GetFriendlyName() *string {
	if o == nil {
		return nil
	}
	return o.FriendlyName
}

func (o *StorageItemAggregateCreatedBy) GetPhotoURL() *string {
	if o == nil {
		return nil
	}
	return o.PhotoURL
}

func (o *StorageItemAggregateCreatedBy) GetAddress() *StorageItemAggregateAddress {
	if o == nil {
		return nil
	}
	return o.Address
}

func (o *StorageItemAggregateCreatedBy) GetBirthday() *time.Time {
	if o == nil {
		return nil
	}
	return o.Birthday
}

func (o *StorageItemAggregateCreatedBy) GetLastSignedIn() *time.Time {
	if o == nil {
		return nil
	}
	return o.LastSignedIn
}

type StorageItemAggregateModifiedByAddress struct {
}

// StorageItemAggregateModifiedBy - Data of the user who last modified this document (title, description, etc.).
type StorageItemAggregateModifiedBy struct {
	// Unique identifier for the user.
	ID string `json:"id"`
	// Datetime when the object was created.
	Created time.Time `json:"created"`
	// Datetime when the object was last modified.
	Modified      time.Time                              `json:"modified"`
	Email         string                                 `json:"email"`
	EmailVerified *bool                                  `default:"false" json:"emailVerified"`
	PhoneNumber   *string                                `default:"null" json:"phoneNumber"`
	DisplayName   string                                 `json:"displayName"`
	FriendlyName  *string                                `default:"null" json:"friendlyName"`
	PhotoURL      *string                                `default:"null" json:"photoURL"`
	Address       *StorageItemAggregateModifiedByAddress `json:"address"`
	Birthday      *time.Time                             `default:"null" json:"birthday"`
	LastSignedIn  *time.Time                             `default:"null" json:"lastSignedIn"`
}

func (s StorageItemAggregateModifiedBy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *StorageItemAggregateModifiedBy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *StorageItemAggregateModifiedBy) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *StorageItemAggregateModifiedBy) GetCreated() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.Created
}

func (o *StorageItemAggregateModifiedBy) GetModified() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.Modified
}

func (o *StorageItemAggregateModifiedBy) GetEmail() string {
	if o == nil {
		return ""
	}
	return o.Email
}

func (o *StorageItemAggregateModifiedBy) GetEmailVerified() *bool {
	if o == nil {
		return nil
	}
	return o.EmailVerified
}

func (o *StorageItemAggregateModifiedBy) GetPhoneNumber() *string {
	if o == nil {
		return nil
	}
	return o.PhoneNumber
}

func (o *StorageItemAggregateModifiedBy) GetDisplayName() string {
	if o == nil {
		return ""
	}
	return o.DisplayName
}

func (o *StorageItemAggregateModifiedBy) GetFriendlyName() *string {
	if o == nil {
		return nil
	}
	return o.FriendlyName
}

func (o *StorageItemAggregateModifiedBy) GetPhotoURL() *string {
	if o == nil {
		return nil
	}
	return o.PhotoURL
}

func (o *StorageItemAggregateModifiedBy) GetAddress() *StorageItemAggregateModifiedByAddress {
	if o == nil {
		return nil
	}
	return o.Address
}

func (o *StorageItemAggregateModifiedBy) GetBirthday() *time.Time {
	if o == nil {
		return nil
	}
	return o.Birthday
}

func (o *StorageItemAggregateModifiedBy) GetLastSignedIn() *time.Time {
	if o == nil {
		return nil
	}
	return o.LastSignedIn
}

type StorageItemAggregateDeletedByAddress struct {
}

// StorageItemAggregateDeletedBy - Data of the user who deleted this document.
type StorageItemAggregateDeletedBy struct {
	// Unique identifier for the user.
	ID string `json:"id"`
	// Datetime when the object was created.
	Created time.Time `json:"created"`
	// Datetime when the object was last modified.
	Modified      time.Time                             `json:"modified"`
	Email         string                                `json:"email"`
	EmailVerified *bool                                 `default:"false" json:"emailVerified"`
	PhoneNumber   *string                               `default:"null" json:"phoneNumber"`
	DisplayName   string                                `json:"displayName"`
	FriendlyName  *string                               `default:"null" json:"friendlyName"`
	PhotoURL      *string                               `default:"null" json:"photoURL"`
	Address       *StorageItemAggregateDeletedByAddress `json:"address"`
	Birthday      *time.Time                            `default:"null" json:"birthday"`
	LastSignedIn  *time.Time                            `default:"null" json:"lastSignedIn"`
}

func (s StorageItemAggregateDeletedBy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *StorageItemAggregateDeletedBy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *StorageItemAggregateDeletedBy) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *StorageItemAggregateDeletedBy) GetCreated() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.Created
}

func (o *StorageItemAggregateDeletedBy) GetModified() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.Modified
}

func (o *StorageItemAggregateDeletedBy) GetEmail() string {
	if o == nil {
		return ""
	}
	return o.Email
}

func (o *StorageItemAggregateDeletedBy) GetEmailVerified() *bool {
	if o == nil {
		return nil
	}
	return o.EmailVerified
}

func (o *StorageItemAggregateDeletedBy) GetPhoneNumber() *string {
	if o == nil {
		return nil
	}
	return o.PhoneNumber
}

func (o *StorageItemAggregateDeletedBy) GetDisplayName() string {
	if o == nil {
		return ""
	}
	return o.DisplayName
}

func (o *StorageItemAggregateDeletedBy) GetFriendlyName() *string {
	if o == nil {
		return nil
	}
	return o.FriendlyName
}

func (o *StorageItemAggregateDeletedBy) GetPhotoURL() *string {
	if o == nil {
		return nil
	}
	return o.PhotoURL
}

func (o *StorageItemAggregateDeletedBy) GetAddress() *StorageItemAggregateDeletedByAddress {
	if o == nil {
		return nil
	}
	return o.Address
}

func (o *StorageItemAggregateDeletedBy) GetBirthday() *time.Time {
	if o == nil {
		return nil
	}
	return o.Birthday
}

func (o *StorageItemAggregateDeletedBy) GetLastSignedIn() *time.Time {
	if o == nil {
		return nil
	}
	return o.LastSignedIn
}

// StorageItemAggregateMetadata - JSON object storing abitrary user-defined metadata.
//
// Some elements may be automatically populated by the system or various document processors.
type StorageItemAggregateMetadata struct {
}

type StorageItemAggregateFeed string

const (
	StorageItemAggregateFeedStaff    StorageItemAggregateFeed = "staff"
	StorageItemAggregateFeedCustomer StorageItemAggregateFeed = "customer"
)

func (e StorageItemAggregateFeed) ToPointer() *StorageItemAggregateFeed {
	return &e
}
func (e *StorageItemAggregateFeed) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "staff":
		fallthrough
	case "customer":
		*e = StorageItemAggregateFeed(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StorageItemAggregateFeed: %v", v)
	}
}

type StorageItemAggregate struct {
	// Unique identifier of the document.
	ID string `json:"id"`
	// User-defined unique ID for the document (for reference only).
	ReferenceID *string `json:"referenceId"`
	// Datetime when the object was created.
	Created time.Time `json:"created"`
	// Unique ID of the user who created/uploaded this document.
	CreatedByID *string `json:"createdById"`
	// Data of the user who created/uploaded this document.
	CreatedBy *StorageItemAggregateCreatedBy `json:"createdBy,omitempty"`
	// Datetime when the object was last modified.
	Modified time.Time `json:"modified"`
	// Unique ID of the user who last modified this document (title, description, etc.).
	ModifiedByID *string `json:"modifiedById"`
	// Data of the user who last modified this document (title, description, etc.).
	ModifiedBy *StorageItemAggregateModifiedBy `json:"modifiedBy,omitempty"`
	// Datetime when the object was deleted.
	Deleted *time.Time `json:"deleted"`
	// Unique ID of the user who deleted this document.
	DeletedByID *string `json:"deletedById"`
	// Data of the user who deleted this document.
	DeletedBy *StorageItemAggregateDeletedBy `json:"deletedBy,omitempty"`
	// Title of the document.
	Title string `json:"title"`
	// Short text description of the document.
	Description *string `json:"description"`
	// Mime type of the document
	MimeType string `json:"mimeType"`
	// JSON object storing abitrary user-defined metadata.
	//
	// Some elements may be automatically populated by the system or various document processors.
	Metadata         StorageItemAggregateMetadata `json:"metadata"`
	Extension        *string                      `json:"extension"`
	OriginalFilename *string                      `json:"originalFilename"`
	// Boolean flag indicating if a file may or may not be accessed with a public URL. Private files can only be accessed when their downloadURL includes an authentication token (short-lived).
	PrivateFile *bool `default:"true" json:"privateFile"`
	// System-defined unique identifier.
	ExternalID *string `json:"externalId"`
	// Download URL of the document. Private document downloadURLs include a short-lived authentication token.
	DownloadURL *string `json:"downloadUrl"`
	// List of processing results for this document (when applicable).
	ProcessingResults []StorageItemProcessorResultAggregate `json:"processingResults,omitempty"`
	// The feeds of users who can view the document
	Feed []StorageItemAggregateFeed `json:"feed"`
}

func (s StorageItemAggregate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *StorageItemAggregate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *StorageItemAggregate) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *StorageItemAggregate) GetReferenceID() *string {
	if o == nil {
		return nil
	}
	return o.ReferenceID
}

func (o *StorageItemAggregate) GetCreated() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.Created
}

func (o *StorageItemAggregate) GetCreatedByID() *string {
	if o == nil {
		return nil
	}
	return o.CreatedByID
}

func (o *StorageItemAggregate) GetCreatedBy() *StorageItemAggregateCreatedBy {
	if o == nil {
		return nil
	}
	return o.CreatedBy
}

func (o *StorageItemAggregate) GetModified() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.Modified
}

func (o *StorageItemAggregate) GetModifiedByID() *string {
	if o == nil {
		return nil
	}
	return o.ModifiedByID
}

func (o *StorageItemAggregate) GetModifiedBy() *StorageItemAggregateModifiedBy {
	if o == nil {
		return nil
	}
	return o.ModifiedBy
}

func (o *StorageItemAggregate) GetDeleted() *time.Time {
	if o == nil {
		return nil
	}
	return o.Deleted
}

func (o *StorageItemAggregate) GetDeletedByID() *string {
	if o == nil {
		return nil
	}
	return o.DeletedByID
}

func (o *StorageItemAggregate) GetDeletedBy() *StorageItemAggregateDeletedBy {
	if o == nil {
		return nil
	}
	return o.DeletedBy
}

func (o *StorageItemAggregate) GetTitle() string {
	if o == nil {
		return ""
	}
	return o.Title
}

func (o *StorageItemAggregate) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *StorageItemAggregate) GetMimeType() string {
	if o == nil {
		return ""
	}
	return o.MimeType
}

func (o *StorageItemAggregate) GetMetadata() StorageItemAggregateMetadata {
	if o == nil {
		return StorageItemAggregateMetadata{}
	}
	return o.Metadata
}

func (o *StorageItemAggregate) GetExtension() *string {
	if o == nil {
		return nil
	}
	return o.Extension
}

func (o *StorageItemAggregate) GetOriginalFilename() *string {
	if o == nil {
		return nil
	}
	return o.OriginalFilename
}

func (o *StorageItemAggregate) GetPrivateFile() *bool {
	if o == nil {
		return nil
	}
	return o.PrivateFile
}

func (o *StorageItemAggregate) GetExternalID() *string {
	if o == nil {
		return nil
	}
	return o.ExternalID
}

func (o *StorageItemAggregate) GetDownloadURL() *string {
	if o == nil {
		return nil
	}
	return o.DownloadURL
}

func (o *StorageItemAggregate) GetProcessingResults() []StorageItemProcessorResultAggregate {
	if o == nil {
		return nil
	}
	return o.ProcessingResults
}

func (o *StorageItemAggregate) GetFeed() []StorageItemAggregateFeed {
	if o == nil {
		return []StorageItemAggregateFeed{}
	}
	return o.Feed
}
