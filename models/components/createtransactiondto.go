// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/reguardprotection/warrantysphere/internal/utils"
	"time"
)

type CreateTransactionDto struct {
	// Title of the transaction
	Title string `json:"title"`
	// Description of the transaction
	Description *string `default:"null" json:"description"`
	// Amount of the transaction
	Amount int64 `json:"amount"`
	// User-defined identifier for external tracking when needed.
	CorrelationID *string `default:"null" json:"correlationId"`
	// Datetime when transaction took place (defaults to now).
	TransactionDate *time.Time `default:"2024-11-18 15:05:52.014 +0000 UTC" json:"transactionDate"`
	// ID of the account from which the funds originate. (always required if no `destinationAccountId` is specified)
	SourceAccountID *string `default:"null" json:"sourceAccountId"`
	// ID of the account into which the funds will flow. (always required if no `sourceAccountId` is specified)
	DestinationAccountID *string `default:"null" json:"destinationAccountId"`
}

func (c CreateTransactionDto) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CreateTransactionDto) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CreateTransactionDto) GetTitle() string {
	if o == nil {
		return ""
	}
	return o.Title
}

func (o *CreateTransactionDto) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *CreateTransactionDto) GetAmount() int64 {
	if o == nil {
		return 0
	}
	return o.Amount
}

func (o *CreateTransactionDto) GetCorrelationID() *string {
	if o == nil {
		return nil
	}
	return o.CorrelationID
}

func (o *CreateTransactionDto) GetTransactionDate() *time.Time {
	if o == nil {
		return nil
	}
	return o.TransactionDate
}

func (o *CreateTransactionDto) GetSourceAccountID() *string {
	if o == nil {
		return nil
	}
	return o.SourceAccountID
}

func (o *CreateTransactionDto) GetDestinationAccountID() *string {
	if o == nil {
		return nil
	}
	return o.DestinationAccountID
}
