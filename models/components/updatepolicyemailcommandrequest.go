// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type UpdatePolicyEmailCommandRequestType string

const (
	UpdatePolicyEmailCommandRequestTypeWarrantyProvisioned UpdatePolicyEmailCommandRequestType = "Warranty Provisioned"
)

func (e UpdatePolicyEmailCommandRequestType) ToPointer() *UpdatePolicyEmailCommandRequestType {
	return &e
}
func (e *UpdatePolicyEmailCommandRequestType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Warranty Provisioned":
		*e = UpdatePolicyEmailCommandRequestType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdatePolicyEmailCommandRequestType: %v", v)
	}
}

type UpdatePolicyEmailCommandRequest struct {
	Type UpdatePolicyEmailCommandRequestType `json:"type"`
	// Email Subject
	Subject *string `json:"subject"`
	// Description email content
	Content *string `json:"content"`
	// Email byline
	Byline *string `json:"byline"`
	// Email Instruction image.
	InstructionImage *string `json:"instructionImage"`
	// Email Header.
	Header *string `json:"header"`
}

func (o *UpdatePolicyEmailCommandRequest) GetType() UpdatePolicyEmailCommandRequestType {
	if o == nil {
		return UpdatePolicyEmailCommandRequestType("")
	}
	return o.Type
}

func (o *UpdatePolicyEmailCommandRequest) GetSubject() *string {
	if o == nil {
		return nil
	}
	return o.Subject
}

func (o *UpdatePolicyEmailCommandRequest) GetContent() *string {
	if o == nil {
		return nil
	}
	return o.Content
}

func (o *UpdatePolicyEmailCommandRequest) GetByline() *string {
	if o == nil {
		return nil
	}
	return o.Byline
}

func (o *UpdatePolicyEmailCommandRequest) GetInstructionImage() *string {
	if o == nil {
		return nil
	}
	return o.InstructionImage
}

func (o *UpdatePolicyEmailCommandRequest) GetHeader() *string {
	if o == nil {
		return nil
	}
	return o.Header
}
