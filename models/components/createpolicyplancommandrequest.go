// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type CreatePolicyPlanCommandRequest struct {
	// Whether or not the command should create a new draft policy if required.
	CanCreateNewVersion bool    `json:"canCreateNewVersion"`
	Order               float64 `json:"order"`
	// Title of the plan.
	Title string `json:"title"`
	// Description of the plan.
	Description *string `json:"description"`
	Visible     bool    `json:"visible"`
	// Conditions required for a customer to be eligible to purchase this plan.
	Conditions []ConditionGroupDto `json:"conditions,omitempty"`
	// Groupings of coverages to optionally be added on to plans.
	Addons []AddonDto `json:"addons,omitempty"`
	// Groupings of coverage liabilities.
	LiabilityGroups []LiabilityGroupDto `json:"liabilityGroups,omitempty"`
	// Configs for each coverage on the plan to determine if it is included in the plan.
	CoverageConfigs []PolicyTermCoverageConfigDto `json:"coverageConfigs,omitempty"`
}

func (o *CreatePolicyPlanCommandRequest) GetCanCreateNewVersion() bool {
	if o == nil {
		return false
	}
	return o.CanCreateNewVersion
}

func (o *CreatePolicyPlanCommandRequest) GetOrder() float64 {
	if o == nil {
		return 0.0
	}
	return o.Order
}

func (o *CreatePolicyPlanCommandRequest) GetTitle() string {
	if o == nil {
		return ""
	}
	return o.Title
}

func (o *CreatePolicyPlanCommandRequest) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *CreatePolicyPlanCommandRequest) GetVisible() bool {
	if o == nil {
		return false
	}
	return o.Visible
}

func (o *CreatePolicyPlanCommandRequest) GetConditions() []ConditionGroupDto {
	if o == nil {
		return nil
	}
	return o.Conditions
}

func (o *CreatePolicyPlanCommandRequest) GetAddons() []AddonDto {
	if o == nil {
		return nil
	}
	return o.Addons
}

func (o *CreatePolicyPlanCommandRequest) GetLiabilityGroups() []LiabilityGroupDto {
	if o == nil {
		return nil
	}
	return o.LiabilityGroups
}

func (o *CreatePolicyPlanCommandRequest) GetCoverageConfigs() []PolicyTermCoverageConfigDto {
	if o == nil {
		return nil
	}
	return o.CoverageConfigs
}
