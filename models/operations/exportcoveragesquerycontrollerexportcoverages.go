// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/reguardprotection/warrantysphere/internal/utils"
	"github.com/reguardprotection/warrantysphere/models/components"
)

type ExportCoveragesQueryControllerExportCoveragesRequest struct {
	// Unique identifier of ht epolicy whos coverages are being exported
	PolicyID string `queryParam:"style=form,explode=true,name=policyId"`
	// Maximum number of records to be exported
	Limit *float64 `default:"1000" queryParam:"style=form,explode=true,name=limit"`
}

func (e ExportCoveragesQueryControllerExportCoveragesRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(e, "", false)
}

func (e *ExportCoveragesQueryControllerExportCoveragesRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &e, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ExportCoveragesQueryControllerExportCoveragesRequest) GetPolicyID() string {
	if o == nil {
		return ""
	}
	return o.PolicyID
}

func (o *ExportCoveragesQueryControllerExportCoveragesRequest) GetLimit() *float64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

type ExportCoveragesQueryControllerExportCoveragesResponse struct {
	HTTPMeta                     components.HTTPMetadata `json:"-"`
	ExportCoveragesQueryResponse *components.ExportCoveragesQueryResponse
}

func (o *ExportCoveragesQueryControllerExportCoveragesResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ExportCoveragesQueryControllerExportCoveragesResponse) GetExportCoveragesQueryResponse() *components.ExportCoveragesQueryResponse {
	if o == nil {
		return nil
	}
	return o.ExportCoveragesQueryResponse
}
