// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/reguardprotection/warrantysphere/internal/utils"
	"github.com/reguardprotection/warrantysphere/models/components"
)

type DocumentsListRequest struct {
	Limit *int64 `default:"10" queryParam:"style=form,explode=true,name=limit"`
	Page  *int64 `default:"1" queryParam:"style=form,explode=true,name=page"`
	// Search string used to filter documents by title
	Search *string `queryParam:"style=form,explode=true,name=search"`
}

func (d DocumentsListRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(d, "", false)
}

func (d *DocumentsListRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &d, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *DocumentsListRequest) GetLimit() *int64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *DocumentsListRequest) GetPage() *int64 {
	if o == nil {
		return nil
	}
	return o.Page
}

func (o *DocumentsListRequest) GetSearch() *string {
	if o == nil {
		return nil
	}
	return o.Search
}

type DocumentsListResponse struct {
	HTTPMeta              components.HTTPMetadata `json:"-"`
	ListDocumentsResponse *components.ListDocumentsResponse
}

func (o *DocumentsListResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *DocumentsListResponse) GetListDocumentsResponse() *components.ListDocumentsResponse {
	if o == nil {
		return nil
	}
	return o.ListDocumentsResponse
}
