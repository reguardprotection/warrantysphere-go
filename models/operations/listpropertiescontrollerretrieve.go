// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/reguardprotection/warrantysphere/internal/utils"
	"github.com/reguardprotection/warrantysphere/models/components"
)

// Type - Search by type of the property
type Type string

const (
	TypeNumber  Type = "NUMBER"
	TypeText    Type = "TEXT"
	TypeBoolean Type = "BOOLEAN"
	TypeDate    Type = "DATE"
	TypeObject  Type = "OBJECT"
)

func (e Type) ToPointer() *Type {
	return &e
}
func (e *Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NUMBER":
		fallthrough
	case "TEXT":
		fallthrough
	case "BOOLEAN":
		fallthrough
	case "DATE":
		fallthrough
	case "OBJECT":
		*e = Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Type: %v", v)
	}
}

type ListPropertiesControllerRetrieveRequest struct {
	Limit *int64 `default:"10" queryParam:"style=form,explode=true,name=limit"`
	Page  *int64 `default:"1" queryParam:"style=form,explode=true,name=page"`
	// Search by name of the property
	Search *string `queryParam:"style=form,explode=true,name=search"`
	// Search by type of the property
	Type *Type `queryParam:"style=form,explode=true,name=type"`
}

func (l ListPropertiesControllerRetrieveRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListPropertiesControllerRetrieveRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ListPropertiesControllerRetrieveRequest) GetLimit() *int64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *ListPropertiesControllerRetrieveRequest) GetPage() *int64 {
	if o == nil {
		return nil
	}
	return o.Page
}

func (o *ListPropertiesControllerRetrieveRequest) GetSearch() *string {
	if o == nil {
		return nil
	}
	return o.Search
}

func (o *ListPropertiesControllerRetrieveRequest) GetType() *Type {
	if o == nil {
		return nil
	}
	return o.Type
}

type ListPropertiesControllerRetrieveResponse struct {
	HTTPMeta                    components.HTTPMetadata `json:"-"`
	ListPropertiesQueryResponse *components.ListPropertiesQueryResponse
}

func (o *ListPropertiesControllerRetrieveResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListPropertiesControllerRetrieveResponse) GetListPropertiesQueryResponse() *components.ListPropertiesQueryResponse {
	if o == nil {
		return nil
	}
	return o.ListPropertiesQueryResponse
}
