// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/reguardprotection/warrantysphere/internal/utils"
	"github.com/reguardprotection/warrantysphere/models/components"
)

type ExportPoliciesQueryControllerExportPoliciesRequest struct {
	// Maximum number of records to be exported
	Limit *float64 `default:"1000" queryParam:"style=form,explode=true,name=limit"`
}

func (e ExportPoliciesQueryControllerExportPoliciesRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(e, "", false)
}

func (e *ExportPoliciesQueryControllerExportPoliciesRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &e, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ExportPoliciesQueryControllerExportPoliciesRequest) GetLimit() *float64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

type ExportPoliciesQueryControllerExportPoliciesResponse struct {
	HTTPMeta                    components.HTTPMetadata `json:"-"`
	ExportPoliciesQueryResponse *components.ExportPoliciesQueryResponse
}

func (o *ExportPoliciesQueryControllerExportPoliciesResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ExportPoliciesQueryControllerExportPoliciesResponse) GetExportPoliciesQueryResponse() *components.ExportPoliciesQueryResponse {
	if o == nil {
		return nil
	}
	return o.ExportPoliciesQueryResponse
}
