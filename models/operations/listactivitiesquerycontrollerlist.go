// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/reguardprotection/warrantysphere/internal/utils"
	"github.com/reguardprotection/warrantysphere/models/components"
)

type ListActivitiesQueryControllerListQueryParamFeed string

const (
	ListActivitiesQueryControllerListQueryParamFeedStaff    ListActivitiesQueryControllerListQueryParamFeed = "staff"
	ListActivitiesQueryControllerListQueryParamFeedCustomer ListActivitiesQueryControllerListQueryParamFeed = "customer"
)

func (e ListActivitiesQueryControllerListQueryParamFeed) ToPointer() *ListActivitiesQueryControllerListQueryParamFeed {
	return &e
}
func (e *ListActivitiesQueryControllerListQueryParamFeed) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "staff":
		fallthrough
	case "customer":
		*e = ListActivitiesQueryControllerListQueryParamFeed(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListActivitiesQueryControllerListQueryParamFeed: %v", v)
	}
}

type ListActivitiesQueryControllerListRequest struct {
	Limit *int64 `default:"10" queryParam:"style=form,explode=true,name=limit"`
	Page  *int64 `default:"1" queryParam:"style=form,explode=true,name=page"`
	// The feeds of users who can view the activity.
	Feed []ListActivitiesQueryControllerListQueryParamFeed `queryParam:"style=form,explode=true,name=feed"`
	// The unique identifier of the user who triggered the activity (null if system).
	TriggeredByID *string `queryParam:"style=form,explode=true,name=triggeredById"`
}

func (l ListActivitiesQueryControllerListRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListActivitiesQueryControllerListRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ListActivitiesQueryControllerListRequest) GetLimit() *int64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *ListActivitiesQueryControllerListRequest) GetPage() *int64 {
	if o == nil {
		return nil
	}
	return o.Page
}

func (o *ListActivitiesQueryControllerListRequest) GetFeed() []ListActivitiesQueryControllerListQueryParamFeed {
	if o == nil {
		return []ListActivitiesQueryControllerListQueryParamFeed{}
	}
	return o.Feed
}

func (o *ListActivitiesQueryControllerListRequest) GetTriggeredByID() *string {
	if o == nil {
		return nil
	}
	return o.TriggeredByID
}

type ListActivitiesQueryControllerListResponse struct {
	HTTPMeta                    components.HTTPMetadata `json:"-"`
	ListActivitiesQueryResponse *components.ListActivitiesQueryResponse
}

func (o *ListActivitiesQueryControllerListResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListActivitiesQueryControllerListResponse) GetListActivitiesQueryResponse() *components.ListActivitiesQueryResponse {
	if o == nil {
		return nil
	}
	return o.ListActivitiesQueryResponse
}
