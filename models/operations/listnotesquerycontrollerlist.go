// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/reguardprotection/warrantysphere/internal/utils"
	"github.com/reguardprotection/warrantysphere/models/components"
)

type QueryParamFeed string

const (
	QueryParamFeedStaff    QueryParamFeed = "staff"
	QueryParamFeedCustomer QueryParamFeed = "customer"
)

func (e QueryParamFeed) ToPointer() *QueryParamFeed {
	return &e
}
func (e *QueryParamFeed) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "staff":
		fallthrough
	case "customer":
		*e = QueryParamFeed(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryParamFeed: %v", v)
	}
}

type ListNotesQueryControllerListRequest struct {
	Limit *int64 `default:"10" queryParam:"style=form,explode=true,name=limit"`
	Page  *int64 `default:"1" queryParam:"style=form,explode=true,name=page"`
	// The unique identifier of the object associated with the note.
	ObjectID *string `queryParam:"style=form,explode=true,name=objectId"`
	// The type of object associated with the note.
	ObjectType *string `queryParam:"style=form,explode=true,name=objectType"`
	// The feeds of users who can view the note.
	Feed []QueryParamFeed `queryParam:"style=form,explode=true,name=feed"`
	// The unique identifier of the user who created the note.
	CreatedByID *string `queryParam:"style=form,explode=true,name=createdById"`
}

func (l ListNotesQueryControllerListRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListNotesQueryControllerListRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ListNotesQueryControllerListRequest) GetLimit() *int64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *ListNotesQueryControllerListRequest) GetPage() *int64 {
	if o == nil {
		return nil
	}
	return o.Page
}

func (o *ListNotesQueryControllerListRequest) GetObjectID() *string {
	if o == nil {
		return nil
	}
	return o.ObjectID
}

func (o *ListNotesQueryControllerListRequest) GetObjectType() *string {
	if o == nil {
		return nil
	}
	return o.ObjectType
}

func (o *ListNotesQueryControllerListRequest) GetFeed() []QueryParamFeed {
	if o == nil {
		return nil
	}
	return o.Feed
}

func (o *ListNotesQueryControllerListRequest) GetCreatedByID() *string {
	if o == nil {
		return nil
	}
	return o.CreatedByID
}

type ListNotesQueryControllerListResponse struct {
	HTTPMeta               components.HTTPMetadata `json:"-"`
	ListNotesQueryResponse *components.ListNotesQueryResponse
}

func (o *ListNotesQueryControllerListResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListNotesQueryControllerListResponse) GetListNotesQueryResponse() *components.ListNotesQueryResponse {
	if o == nil {
		return nil
	}
	return o.ListNotesQueryResponse
}
