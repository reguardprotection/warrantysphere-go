// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/reguardprotection/warrantysphere/internal/utils"
	"github.com/reguardprotection/warrantysphere/models/components"
)

type IDField string

const (
	IDFieldID          IDField = "id"
	IDFieldEmail       IDField = "email"
	IDFieldUserID      IDField = "userId"
	IDFieldReferenceID IDField = "referenceId"
)

func (e IDField) ToPointer() *IDField {
	return &e
}
func (e *IDField) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "id":
		fallthrough
	case "email":
		fallthrough
	case "userId":
		fallthrough
	case "referenceId":
		*e = IDField(v)
		return nil
	default:
		return fmt.Errorf("invalid value for IDField: %v", v)
	}
}

type RetrieveStaffQueryControllerRetrieveStaffRequest struct {
	UniqueID string   `pathParam:"style=simple,explode=false,name=uniqueId"`
	IDField  *IDField `default:"id" queryParam:"style=form,explode=true,name=idField"`
}

func (r RetrieveStaffQueryControllerRetrieveStaffRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *RetrieveStaffQueryControllerRetrieveStaffRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *RetrieveStaffQueryControllerRetrieveStaffRequest) GetUniqueID() string {
	if o == nil {
		return ""
	}
	return o.UniqueID
}

func (o *RetrieveStaffQueryControllerRetrieveStaffRequest) GetIDField() *IDField {
	if o == nil {
		return nil
	}
	return o.IDField
}

type RetrieveStaffQueryControllerRetrieveStaffResponse struct {
	HTTPMeta       components.HTTPMetadata `json:"-"`
	StaffAggregate *components.StaffAggregate
}

func (o *RetrieveStaffQueryControllerRetrieveStaffResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *RetrieveStaffQueryControllerRetrieveStaffResponse) GetStaffAggregate() *components.StaffAggregate {
	if o == nil {
		return nil
	}
	return o.StaffAggregate
}
