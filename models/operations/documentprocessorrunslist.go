// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/reguardprotection/warrantysphere/internal/utils"
	"github.com/reguardprotection/warrantysphere/models/components"
)

type DocumentProcessorRunsListRequest struct {
	Limit *int64 `default:"10" queryParam:"style=form,explode=true,name=limit"`
	Page  *int64 `default:"1" queryParam:"style=form,explode=true,name=page"`
	// Unique identifier of the processor to query runs of.
	ProcessorID *string `queryParam:"style=form,explode=true,name=processorId"`
	// Unique identifier of the document to query runs of.
	DocumentID *string `queryParam:"style=form,explode=true,name=documentId"`
	// Boolean flag indicating if `downloadURLs` should be refreshed.
	RefreshDownloadURLs *bool `default:"false" queryParam:"style=form,explode=true,name=refreshDownloadURLs"`
}

func (d DocumentProcessorRunsListRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(d, "", false)
}

func (d *DocumentProcessorRunsListRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &d, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *DocumentProcessorRunsListRequest) GetLimit() *int64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *DocumentProcessorRunsListRequest) GetPage() *int64 {
	if o == nil {
		return nil
	}
	return o.Page
}

func (o *DocumentProcessorRunsListRequest) GetProcessorID() *string {
	if o == nil {
		return nil
	}
	return o.ProcessorID
}

func (o *DocumentProcessorRunsListRequest) GetDocumentID() *string {
	if o == nil {
		return nil
	}
	return o.DocumentID
}

func (o *DocumentProcessorRunsListRequest) GetRefreshDownloadURLs() *bool {
	if o == nil {
		return nil
	}
	return o.RefreshDownloadURLs
}

type DocumentProcessorRunsListResponse struct {
	HTTPMeta                          components.HTTPMetadata `json:"-"`
	ListDocumentProcessorRunsResponse *components.ListDocumentProcessorRunsResponse
}

func (o *DocumentProcessorRunsListResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *DocumentProcessorRunsListResponse) GetListDocumentProcessorRunsResponse() *components.ListDocumentProcessorRunsResponse {
	if o == nil {
		return nil
	}
	return o.ListDocumentProcessorRunsResponse
}
